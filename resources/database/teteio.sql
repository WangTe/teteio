-- phpMyAdmin SQL Dump
-- version 4.5.0.2
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: 2016-06-16 12:59:25
-- 服务器版本： 5.7.13
-- PHP Version: 7.0.7

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `teteio`
--

-- --------------------------------------------------------

--
-- 表的结构 `attachment`
--

CREATE TABLE `attachment` (
  `id` int(10) UNSIGNED NOT NULL,
  `filename` varchar(255) NOT NULL COMMENT '文件名',
  `path` varchar(500) NOT NULL COMMENT '路劲',
  `size` int(11) NOT NULL COMMENT '文件大小',
  `image` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否是图片0不是，1是图片',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- 表的结构 `category`
--

CREATE TABLE `category` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(45) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `category`
--

INSERT INTO `category` (`id`, `name`) VALUES
(1, 'PHP'),
(2, '前端'),
(3, 'web架构'),
(4, 'NetPioneer'),
(5, '生活'),
(6, 'JavaScript'),
(7, 'Linux'),
(8, 'MySQL'),
(9, '科学上网'),
(10, '嵌入式'),
(11, '在路上');

-- --------------------------------------------------------

--
-- 表的结构 `comment`
--

CREATE TABLE `comment` (
  `id` int(10) UNSIGNED NOT NULL,
  `rid` int(10) UNSIGNED NOT NULL DEFAULT '0' COMMENT '回复的ID',
  `poster` varchar(45) NOT NULL COMMENT '评论人',
  `content` text NOT NULL COMMENT '评论内容',
  `email` varchar(45) NOT NULL COMMENT '邮箱',
  `homelink` varchar(45) NOT NULL COMMENT '主页',
  `ip` varchar(45) NOT NULL COMMENT 'IP地址',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- 表的结构 `config`
--

CREATE TABLE `config` (
  `id` int(10) UNSIGNED NOT NULL,
  `key` varchar(45) NOT NULL COMMENT '配置的key',
  `value` text NOT NULL COMMENT '配置的值',
  `name` varchar(45) NOT NULL COMMENT '配置名称',
  `desc` varchar(255) NOT NULL COMMENT '配置的描述'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- 表的结构 `post`
--

CREATE TABLE `post` (
  `id` int(10) UNSIGNED NOT NULL,
  `user_id` int(10) UNSIGNED NOT NULL COMMENT '发布者ID',
  `category_id` int(10) UNSIGNED NOT NULL COMMENT '类别ID',
  `title` varchar(255) NOT NULL COMMENT '标题',
  `content` longtext NOT NULL COMMENT '内容',
  `excerpt` longtext NOT NULL COMMENT '摘要',
  `views` int(11) NOT NULL COMMENT '浏览次数',
  `tags` text NOT NULL,
  `comment_num` int(11) NOT NULL COMMENT '评论数',
  `attachment_num` int(11) NOT NULL COMMENT '附件数量',
  `publish` tinyint(4) NOT NULL COMMENT '是否发布，0未发布，1发布',
  `edited_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '编辑的时间',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `post`
--

INSERT INTO `post` (`id`, `user_id`, `category_id`, `title`, `content`, `excerpt`, `views`, `tags`, `comment_num`, `attachment_num`, `publish`, `edited_at`, `created_at`, `updated_at`) VALUES
(2, 1, 11, '第一篇日志', '<p>今天终于把自己的个人博客开通了，瓦咔咔！！</p>\r\n<p>以前没有写博客的习惯</p>\r\n<p>甚至连写点东西的习惯都没有了</p>\r\n<p>想起从小学三年级开始学写作文</p>\r\n<p>而现在却连初中生写作的水平都达不到了</p>\r\n<p>不过像这样打着搜狗的输入法的我</p>\r\n<p>一到想拿笔写字的时候</p>\r\n<p>却发现好多字都已经忘得差不多了</p>\r\n<p>第一篇日志果然是很乱呀</p>\r\n<p>就写到这里吧</p>\r\n<p>以后再来慢慢地补充</p>', '<p>今天终于把自己的个人博客开通了，瓦咔咔！！</p>\r\n<p>以前没有写博客的习惯</p>\r\n<p>甚至连写点东西的习惯都没有了</p>\r\n<p>想起从小学三年级开始学写作文</p>\r\n<p>而现在却连初中生写作的水平都达不到了</p>\r\n<p>不过像这样打着搜狗的输入法的我</p>\r\n<p>一到想拿笔写字的时候</p>\r\n<p>却发现好多字都已经忘得差不多了</p>', 1737, '["生活"]', 3, 0, 1, '2009-09-12 14:00:22', '2009-09-12 14:00:22', '2016-06-16 16:04:53'),
(3, 1, 5, '听歌真好', '<p>&nbsp;&nbsp; &nbsp;国庆快来了，刚好看见找乐上发布了红歌专辑，于是乎就点了全选开始听，听着听着发现以前的歌真的挺好听的，让我想起了小时侯的许多回忆，记得在小学的时候由于唱歌还行，于是音乐课上老师教完歌后，一般会叫我去教其他的同学，特别是歌唱祖国这首歌，那时可是我站在台阶上领着我们班50几号人唱的，那时是小学三年级，以后就胆子越来越小了，基本上就属于唱歌自娱自乐型的，小学时候还对乐器感兴趣过一段时间，那时听到别人吹笛，感觉巨好听的的，于是便嚷着让家里面人买笛子，自学了一段时间后，发现居然也能吹出点东西出来了，第一首学的歌便是世上只有妈妈好，由于只是听过别人吹过，自己也没有曲子，所以那首歌的曲子都是自己按照自己唱着这首歌的调子，自己慢慢的试出曲子的，也没有学过音乐方面的东西，完全是凭着自己的感觉去的，后来也基本上能把自己会唱的歌拿来用笛子吹出来，到了大学来了在寝室里面吹过一起笛子，那次还被东航夸吹得不错，，哈哈，，其实好多都忘得差不多了，，现在还是怀念小时候的各种兴趣呀，一阵感慨，，不过一般都没有存活过很长的时间，完全是一时兴起而已，况且我现在对音乐也不是很有兴趣，不过就是喜欢听听歌，偶尔也跟着唱和几句，不过自从上大学之后我都不敢大声在寝室唱歌了，各种被打击，，想在高中的时候，我陈敏，灿春、创歌几人还经常在讲台前各种疯狂地唱歌，特别是陈敏的夸张的动作和表情，总是逗着我们哈哈大笑，现在想起来那时确实是疯狂的，现在就不行了，偶尔在喝酒的时候才有这种冲动的感觉，或许是人真的是长大了，许多东西不再是按照直接的方式来表达罢了，也不再像以前那么地叛逆了，在各种场合学会了各种的把自己偏激的想法放在心底，也能够耐心地听别人的想法，不知道这算是一种成长还是一种退步，长大了想的东西自然也就多了，不过自己的想法却越来越少了，一些自己的观点也总是得考虑到各方面的观点才能够实行，有时总感觉这是个羁绊，不过好多东西就是这样，所谓&ldquo;横看成岭侧成峰， 远近高低各不同。&rdquo;或者一个人的观点不可能全面，必须大家一起来以不同的角度来分析，这样得出的结论才比较具有权威性吧，不知不觉居然写了这么多了，还是很乱这篇就先到此吧</p>', '<p>&nbsp;国庆快来了，刚好看见找乐上发布了红歌专辑，于是乎就点了全选开始听，听着听着发现以前的歌真的挺好听的，让我想起了小时侯的许多回忆，记得在小学的时候由于唱歌还行，于是音乐课上老师教完歌后，一般会叫我去教其他的同学，特别是歌唱祖国这首歌，那时可是我站在台阶上领着我们班50几号人唱的，那时是小学三年级，以后就胆子越来越小了，基本上就属于唱歌自娱自乐型的，小学时候还对乐器感兴趣过一段时间，那时听到别人吹笛，感觉巨好听的的，于是便嚷着让家里面人买笛子，自学了一段时间后，发现居然也能吹出点东西出来了，第一首学的歌便是世上只有妈妈好，由于只是听过别人吹过，自己也没有曲子，所以那首歌的曲子都是自己按照自己唱着这首歌的调子，自己慢慢的试出曲子的，也没有学过音乐方面的东西，完全是凭着自己的感觉去的，后来也基本上能把自己会唱的歌拿来用笛子吹出来，到了大学来了在寝室里面吹过一起笛子，那次还被东航夸吹得不错，，哈哈，，其实好多都忘得差不多了，，现在还是怀念小时候的各种兴趣呀，一阵感慨，，不过一般都没有存活过很长的时间，完全是一时兴起</p>', 1874, '["生活"]', 0, 0, 1, '2009-09-14 10:53:55', '2009-09-14 10:53:55', '2016-06-16 16:04:48'),
(4, 1, 11, '导航终于做出来了', '<p>\r\n	&nbsp;&nbsp; 昨晚又没有睡觉，为了把导航赶出来，写到早上八点多了实在抗不住了就躺下了。现在把整个网站的制作过程做一个简单的叙述吧。。</p>\r\n<p>\r\n	&nbsp;&nbsp; 其实早在很久以前就一直想做一个网协自己的导航了，但是因为一直拖着，懒着，所以一直都没有实现。这次暑假我算是终于下决心了，不仅我自己在写，而且也叫了部分大二的来写了，其实叫他们写主要是想提高一下他们的技术，至少这次王博确实是用心在写了，以后技术估计他应该算是一个主力吧。我开始写这个的时候应该是8月20多号吧，也就写了两天把静态页面写出来了，当时一直在困扰我的一个问题是邮箱登陆这块和搜索这块，因为邮箱登陆这块126和163的邮箱老是登陆不上，改了好久，最终还是放弃了，后来搜索这块遇到了乱码的问题，这个倒是困扰了我好久了，因为像百度这样的搜索都是GB2312的编码，而我一直想用UTF8的编码，但是在搜索条打上中文后，转到百度或者GOOGLE上就乱码了，这郁闷了我好久，好吧，我只好放弃了UTF8的编码了，改成GB2312的编码了。后来写后台，数据库还有后台管理的编码全部是UTF8的编码，各种的不和谐呀。这次主页用的是纯静态页面，主要是考虑到加载的速度，然后后台可以添加一些新闻动态和本站公告等，通过更新模板来实现的，这时候问题又来了，我的主页是GB2312的编码，所以我的模板页也是GB2312的编码了，但是我的数据库和其他的PHP都是UTF8的编码的，所以在更新模板的update.php这个页面里面我不得不采用了iconv()这个函数进行转换了，iconv(&quot;UTF-8&quot;,&quot;GB2312//IGNORE&quot;,$content) ；转化了之后在主页就可以用百度和GOOGLE搜索而不乱码了，大概又花了两天的时间把后台的登陆和新闻动态、本站公告给写好了，于是乎整个网站也就出来了。</p>\r\n<p>\r\n	&nbsp;&nbsp; 网站出来后我就一直在想用个什么样的域名呢？后来看看机房的一张展板上有star.bit.edu.cn这个闲置的域名还没有用上，于是乎我就想用这个域名了，本来想早点跟张老师谈谈域名的事的，不过一直在拖着，因为还有NPLIVE那一块还在写后台和聊天室那块，这一拖真拖出问题来了，天意弄人呀，电脑居然在最关键的时候中毒了，于是乎我直接GHOST重装，于是乎硬盘分区直接给丢了，因为以前装了个LINUX 双系统的缘故。这次我是彻底地傻了，硬盘东西全部没有了，我写过的好多网站和文档就这样没了，导航也不例外，那几天就是比较背点，硬盘还没有坏多久，直接又丢了150多元钱，，哎&nbsp; 各种悲剧呀 。后来没有办法了在阿不那里找了块硬盘应急用吧，于是乎重新装系统，软件等 &hellip;&hellip;。。新亏yuzhoumu那里还有我的还没有写完的静态页面，于是我又从新开始写导航的静态页了，痛苦呀。。不过这次却也是又突破的地方，我居然全部用了UTF8的编码写得，而且在搜索那一块也找到了百度的和GOOGLE的转换编码的一个隐藏的&lt;input&gt;了一一贴出来吧</p>\r\n<p>\r\n	百度 &lt;input type=hidden name=ie value=&quot;UTF-8&quot;&gt;</p>\r\n<p>\r\n	GOOGLE&nbsp; &lt;input type=&quot;hidden&quot; value=&quot;utf8&quot; name=&quot;ie&quot;/&gt;&nbsp;&nbsp; &lt;input type=&quot;hidden&quot; value=&quot;utf8&quot; name=&quot;oe&quot;/&gt;</p>\r\n<p>\r\n	加上这两句后在UTF8的页面搜索就不会出现乱码了，于是乎我又去加上校内的FTP搜索，这次发现它里面没有像百度和GOOGLE这样的隐藏字段，于是乎我也图了个方便，直接写了歌search.php</p>\r\n<p>\r\n	&lt;?php<br />\r\n	header(&quot;Content-type:text/xml;charset=gb2312&quot;);<br />\r\n	if(isset($_GET[&#39;keyword&#39;])) {<br />\r\n	$xdqh= mb_convert_encoding($_GET[&#39;keyword&#39;],&quot;gb2312&quot;,&quot;utf-8&quot;);<br />\r\n	header(&quot;location:http://nod32.at.bitunion.org/ftp_index.php?keyword=&quot;.$xdqh);<br />\r\n	}<br />\r\n	?&gt;<br />\r\n	通过一个中间的过度页面把搜索框传递过来的UTF8编码的转换成GB2312的编码发到FTP搜索的页面，这样这个问题就解决了</p>\r\n<p>\r\n	&nbsp;&nbsp; 再说说那个流量统计的功能吧，本来是想首页index是全静态的，于是乎这个流量功能就只能通过其他的页面实现了，于是乎用到了刚接触的AJAX来写了一个函数在index.js里面</p>\r\n<p>\r\n	function web_count()<br />\r\n	{&nbsp;&nbsp; <br />\r\n	&nbsp;&nbsp;&nbsp; var xmlhttp = createxml();<br />\r\n	&nbsp;if(xmlhttp.readyState == 4 || xmlhttp.readyState == 0)<br />\r\n	&nbsp;{<br />\r\n	&nbsp;&nbsp;var url = &quot;web_counter.php&quot;;<br />\r\n	&nbsp;&nbsp;xmlhttp.open(&quot;GET&quot;,url,true);<br />\r\n	&nbsp;&nbsp;xmlhttp.onreadystatechange = null;<br />\r\n	&nbsp;&nbsp;xmlhttp.send(null);<br />\r\n	&nbsp;}<br />\r\n	}<br />\r\n	&nbsp;</p>\r\n<p>\r\n	然后在&lt;body&gt;标签里面加上 &lt;body onload=&quot;web_count()&quot;&gt;，这样通过AJAX实现载入页面的时候会异步的方式访问web_count.php这个页面来把用户的点击信息写到数据库里面，然后就可以在后台完成点击的统计了。目前只写出了站点的访问统计这一块，以后还需要完善每个链接的访问统计，以及每条新闻的点击的统计，原理都可以通过这个来实现，这样使导航页面加载能够更快，同时完成点击的统计。</p>\r\n<p>\r\n	当然现在的导航还非常的简单，右下那一块还是空着的，我一直想给那块加点什么东西，不过一直没有想到，看来得以后来慢慢地完善了，好了就先写到这里了。。。明天有时汇编呀 ，，哎&nbsp;&nbsp; ，，今晚看来要早睡了&nbsp; hoho~~</p>', '<p>\r\n	&nbsp;&nbsp; 昨晚又没有睡觉，为了把导航赶出来，写到早上八点多了实在抗不住了就躺下了。现在把整个网站的制作过程做一个简单的叙述吧。。</p>\r\n<p>\r\n	&nbsp;&nbsp; 其实早在很久以前就一直想做一个网协自己的导航了，但是因为一直拖着，懒着，所以一直都没有实现。这次暑假我算是终于下决心了，不仅我自己在写，而且也叫了部分大二的来写了，其实叫他们写主要是想提高一下他们的技术，至少这次王博确实是用心在写了，以后技术估计他应该算是一个主力吧。我开始写这个的时候应该是8月20多号吧，也就写了两天把静态页面写出来了，当时一直在困扰我的一个问题是邮箱登陆这块和搜索这块，因为邮箱登陆这块126和163的邮箱老是登陆不上，改了好久，最终还是放弃了，后来搜索这块遇到了乱码的问题，这个倒是困扰了我好久了，因为像百度这样的搜索都是GB2312的编码，而我一直想用UTF8的编码，但是在搜索条打上中文后，转到百度或者GOOGLE上就乱码了，这郁闷了我好久，好吧，我只好放弃了UTF8的编码了，改成GB2312的编码了。后来写后台，数据库还有后台管理的编码全部是UTF8的编码，各种的不和谐呀。这次主页用的是纯静态页面，主要是考虑到加载的速度，然后后台可以添加一</p>', 2121, '["生活"]', 12, 0, 1, '2009-09-15 11:28:15', '2009-09-15 11:28:15', '2016-06-16 16:04:56'),
(5, 1, 4, '招新进行时……', '<p>&nbsp;&nbsp;&nbsp; 协会9月25日要招新了，这是第一次在本部招新，这次招新的重点是学长了<img alt="" src="/admin/fckeditor/editor/images/smiley/1.gif" />，特别是研究生，不过好像本部的招新也存在比较尴尬的地方。首先本部这边学生没有大一和大二的，大一大二刚好是血气方刚的时候，激情比较充沛，而且正是对做社团比较感兴趣，到了大三大四，即使是有兴趣的，也不免因为课程太紧或者各种事情而不可能把太多心思花在社团上面，而研究生估计也没有几个不忙的吧，即使有时间估计也会对这种基本上无偿服务的社团不会有太大的兴趣吧（猜测），所以此次招新还是存在一定的问题的，这个问题应该在所有的本部社团中都存在。</p>\r\n<p>&nbsp;&nbsp;&nbsp; 不过还好，协会也不需要大规模的招新了，这次主要是技术为重点，其次也适当招一些业务和外联的人员，技术这一块估计能招到2-3个比较厉害的角色就好了，因为现在协会这边还有好多网站需要开发，比方说PT站，还有团委的一些网站，特别是有PHP开发经历的那是相当的赞呀，哈哈，，。从协会目前的技术来看，我yuzhoumu、qqlook、张树平、baliboy等技术人员，不过网站方面大部分是我来做的，明显感觉到网站这方面人才比较缺乏呀。还有协会目前的网站安全技术人员基本上为0，从上次论坛被黑中所表现的无奈就可以看出来，即使是有几百万行的apache访问日志，但是还是没有能够找出攻击的IP出来，直接悲剧呀。还有就是NPLIVE自上线以来就开始有各种莫名奇妙404错误请求，许多令我费解的，后来NPLIVE挂到论坛服务器后论坛也挂了，这有一部分得归功于我写的那个聊天室吧，那个确实读数据库太频繁了，人数一多数据库就会直接挂掉，然后论坛也就挂了，不过把聊天室关了之后NPLIVE承载能力还是很差的，直播良乡迎新晚会那天，晚会快结束时，NPLIVE直接无法访问，这次倒是非常像是DDOS攻击，因为论坛还能勉强访问，而NPLIVE直接无法访问，这样我们也是束手无策了。所以这次网站安全技术人员是迫切需要的了，今天看招新网站的时候发下已经有两个人报名了安全技术这块，不知道他们技术怎么样，不过应该还成吧，即使技术不行业务和外联也应该没有问题的。这回说到业务和外联人员了，协会在暑假期间对论坛升级、后来又推出<a target="_blank" href="http://star.bit.edu.cn">星导航</a>，今天在yuzhoumu的美工和我写页面的效率下，又出台了协会的门户，这个估计会再写篇日志来说说吧，哈哈。这些还是缺少对整个这些服务在校园进行推广的人，特别是<a target="_blank" href="http://star.bit.edu.cn">星导航</a>这块，其实这块要是推广出去了，那么协会所有的服务就自然地会以比较好的条件推广了，外联这块以前在良乡算是一个比较荒废了的部门了，不过回到本部之后发现好多的广告可以啦呀 哈哈，，现在论坛已经挂上了几个广告，估计以后还会有各种各样的广告挂上来吧，这里面肯定有许多是比较有前景的，如果外联部能够在这时发挥出作用，或者主动去拉动大公司的赞助，那么我想以后协会就会比较富裕了，可以各种更新服务器，各种FB了（有点赤裸裸）。外联这块不得不说说良乡的孩子，良乡的孩子比我们在良乡时拉赞助的积极性高了许多，几次都在催我们赶紧吧整个协会服务的广告这块出个文档给他们，而且好像现在良乡这块发展势头很好呀，真是长江后浪推前浪呀<img alt="" src="/admin/fckeditor/editor/images/smiley/1.gif" />。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 本来是写招新的结果写了一堆于招新无关的，写东西真的是越来越乱了，就等招新那天的情况吧，现在也不早了，直接倒之。</p>', '<p>&nbsp;&nbsp; 协会9月25日要招新了，这是第一次在本部招新，这次招新的重点是学长了<img alt="" src="/admin/fckeditor/editor/images/smiley/1.gif" />，特别是研究生，不过好像本部的招新也存在比较尴尬的地方。首先本部这边学生没有大一和大二的，大一大二刚好是血气方刚的时候，激情比较充沛，而且正是对做社团比较感兴趣，到了大三大四，即使是有兴趣的，也不免因为课程太紧或者各种事情而不可能把太多心思花在社团上面，而研究生估计也没有几个不忙的吧，即使有时间估计也会对这种基本上无偿服务的社团不会有太大的兴趣吧（猜测），所以此次招新还是存在一定的问题的，这个问题应该在所有的本部社团中都存在。</p>\r\n<p>&nbsp;&nbsp;&nbsp; 不过还好，协会也不需要大规模的招新了，这次主要是技术为重点，其次也适当招一些业务和外联的人员，技术这一块估计能招到2-3个比较厉害的角色就好了，因为现在协会这边还有好多网站需要开发，比方说PT站，还有团委的一些网站，特别是有PHP开发经历的那是相当的赞呀，哈哈，，。从协会目前的技术来看，我yuzhoumu、qqlook、张树平、baliboy等技术人员，不过网站方面大部分是我来做的，明显感觉到网站这方面人才比较缺乏呀。还有协会目前的网站安全技术人员基本上为0，从上次论坛被黑中所表现的无奈就可以看出来，即使是有几百万行的apache访问日志，</p>', 2095, '["Netpioneer"]', 5, 0, 1, '2009-09-23 15:57:59', '2009-09-23 15:57:59', '2009-09-23 15:57:59'),
(6, 1, 5, '沉思…………', '<p>&nbsp;&nbsp;&nbsp; 又是好久不更新日志了，期间好像博客也挂了好多次了，一直没有管。最近所有的课程开始都慢慢登场之后，感觉生活又越来越颓废了，每天的上课都在呼噜声中度过了，早上第一节课几乎都是没有去上的，然后第二节课才开始懒洋洋地走进教室，却也无心听课，该聊天的聊天，该玩游戏的玩游戏，该睡觉的睡觉。</p>\r\n<p>&nbsp;&nbsp;&nbsp; 转眼间大三了，面临选择的时候已经来到了，保研、考研、出国、工作&hellip;&hellip;&hellip;&hellip; 在众多的选择之中我最大可能地选择了工作这条路，但却还是为自己留了考研的后路，以前总是以为做什么事都不应该给自己留下后路，因为这样就不能全身心地投入到其中，想着要是失败了还有其他的路可以选择，就有可能会放松了自己。而这次我却还是给自己留下了这样的一条后路，或许这也是一种成长。曾经年少轻狂，也曾梦想大学毕业后创办自己的公司，然后发展，然后成为像比尔盖兹一样的世界首富，可是当日子一天一天的来临的时候却猛然发现，自己离那个目标愈来愈远，在大学的时光里面逐渐地迷失了最初的自己，高中时候和灿春、创哥他们经常在一起大谈理想，做着从商创业的春秋大梦，而现在却在寝室里讨论着怎么样才能够符合公司的应聘条件。当一切都已来临的时候才发现梦想有时有点遥远，不知道是越长大了越没有激情去奋斗，还是因为长大了知道了多了也知道了现实中的种种困难，可是内心深处的声音总是会在某个时候告诉我那些梦想不能放弃。</p>\r\n<p>&nbsp;&nbsp; 发现这篇日志的初始日期的10月14日的，而今天是10月27日，日子就是被这样过得糊里糊涂的，一不小心十几天就过了，好在这个系统能够隔一段时间自动保存日志，否则可能又不知何年何月能够再次更新一下了，好了，，现在又要开始赶网站的工。。。。</p>', '<p>&nbsp;&nbsp;&nbsp; 又是好久不更新日志了，期间好像博客也挂了好多次了，一直没有管。最近所有的课程开始都慢慢登场之后，感觉生活又越来越颓废了，每天的上课都在呼噜声中度过了，早上第一节课几乎都是没有去上的，然后第二节课才开始懒洋洋地走进教室，却也无心听课，该聊天的聊天，该玩游戏的玩游戏，该睡觉的睡觉。</p>\r\n<p>&nbsp;&nbsp;&nbsp; 转眼间大三了，面临选择的时候已经来到了，保研、考研、出国、工作&hellip;&hellip;&hellip;&hellip; 在众多的选择之中我最大可能地选择了工作这条路，但却还是为自己留了考研的后路，以前总是以为做什么事都不应该给自己留下后路，因为这样就不能全身心地投入到其中，想着要是失败了还有其他的路可以选择，就有可能会放松了自己。而这次我却还是给自己留下了这样的一条后路，或许这也是一种成长。曾经年少轻狂，也曾梦想大学毕业后创办自己的公司，然后发展，然后成为像比尔盖兹一样的世界首富，可是当日子一天一天的来临的时候却猛然发现，自己离那个目标愈来愈远，在大学的时光里面逐渐地迷失了最初的自己，</p>', 1838, '["生活"]', 2, 0, 1, '2009-10-14 13:25:25', '2009-10-14 13:25:25', '2009-10-14 13:25:25'),
(7, 1, 4, '服务器老是自动关机', '<p>&nbsp;&nbsp; 最近机房服务器间的电脑老是自动就关机了，很是郁闷，今天早上虽然有两节课，但是因为昨晚赶网站了，所以十点多才起床，早上的四节课就这样给泡汤了，然后一来到机房打开论坛一看，发现视听在线挂了，经过了检查才发现，原来是那个插线板已经严重老化了，已经快破了居然还一直再用，晕倒。</p>\r\n<p>&nbsp;</p>\r\n<p>于是乎这篇日志又是很久以前写的然后到今天才给完成，上周六去了中关村，采购了一批服务器那边需要的设备，包括插线板、诊所工具箱等等。本想周六布置一下机房的，发现周日需要去新浪，然后就早早回去睡觉了，一直拖到今天也没有给服务期间整理下，估计这周末应该需要把这些新买的一千多的设备都给弄上了 。。</p>', '<p>&nbsp;&nbsp; 最近机房服务器间的电脑老是自动就关机了，很是郁闷，今天早上虽然有两节课，但是因为昨晚赶网站了，所以十点多才起床，早上的四节课就这样给泡汤了，然后一来到机房打开论坛一看，发现视听在线挂了，经过了检查才发现，原来是那个插线板已经严重老化了，已经快破了居然还一直再用，晕倒。</p>', 2346, '["Netpioneer"]', 0, 0, 1, '2009-10-27 10:13:19', '2009-10-27 10:13:19', '2009-10-27 10:13:19'),
(8, 1, 11, '关于大学生创新计划实验总结…………', '<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;学校的大学生创新实验今天国家级的审批已经出来了，这次我们的项目就这样泡汤了，本来还觉得很有戏的，这样的结果让人很是郁闷，估计yuzhoumu应该也会很郁闷吧，毕竟他为这个东西确实是找了不少资料，并且写项目的那段时间去办公室都看他大部分时间躺在椅子上，估计又是一整晚找资料，写报告吧。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过还好qqlook的项目被批下来了，国家级的，总算我们没有全军覆没，这次估计又得好好地敲一次qqlook的BG了，不敲白不敲了，^-^&nbsp;&nbsp;&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下面我就大概地总结一下这次创新实验的失利吧，我们申请的项目是《基于P2P的IPTV在大型局域网中的应用》，这所以选这个课题是因为暑假期间yuzhoumu、qqlook还有我等几个人一直在研究视频直播这个东西，yuzhoumu在回校之后就开始对peercast这个软件产生了很大的兴趣，于是乎好久天都在研究这个东西如何搭建一个p2p的视频直播系统，但最后由于文档太多，而且配置起来很麻烦，最后终究还是没有配置成功，不过对这个用C++写出来的开源软件，yuzhoumu还是非常的感兴趣的，后来我和qqlook把NPLIVE的网站给写出来了，后台的直播系统是yuzhoumu给弄出来的，用的是微软的一整套mediaserver系统，期间为了把电视信号闭路线穿到服务期间，我们甚至想到了在墙上打一个小洞，后来因为发现地板的构造本来就可以使闭路线从中穿过，我们就把办公室一部分的地板给掀起来了，然后布线成功了。最终因为缺乏设备和设备太陈旧，所以我们最终能自己编码的频道也就只有两个了，其他的频道的源来自其他的高校（北交、北邮等），而且这些来自其他学校的源一旦在线人数太多就容易从源端开始卡，直至NPLIVE上面基本上卡到不能看了，这点着实让我们郁闷了好久，于是乎频道总是在有时多，有时少中度过，还得经常受到同学的各种口水。设备这个问题还是最大的一个问题，人家北交之所以能够转播40+的频道不就是因为设备N吗？期间也向校团委说过这事了，老师的意思是这个东西有点太娱乐的意味，跟学习方面挂钩甚少，所以投出经费支持的可能性也很少，但是张老师建议我们去申请那个国家创新计划，因为可以有1万元的经费下来，刚好可以更新下设备。就这样yuzhoumu和我便开始了对国家创新项目的申请中。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这次失败的几点我认为的先列出来下<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1、我们的研究方向选择上出了些问题</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这个问题很明显了，p2p技术本来说就不是一个什么高深的技术，现在已经广泛地应用于下载和在线视听中&hellip;&hellip;，下载比较有名的迅雷，快车，QQ旋风等等，在线视听上有迅雷看看，快播等，在线直播有PPLIVE，UUSEE等，这里不得不提下快播，确实是很强大的一个东西，暑假期间也向搭建一个基于快播的在线视听站，后来因为感觉没有什么技术含量而放弃了，这样看来P2p技术在应用在视频直播方面的应用其实已经很广泛了，试想一个视频直播的网站要是没有P2P在天朝的局域网里面哪能不杯具呢？由此可知现在的直播软件应用的都应该绝大部分是p2p技术了，所以本身这个东西应该是很难打动老师的心的，因为技术上本来就没有什么创新可言的了，完全是模仿其他的系统罢了</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2、我们的内容上因为选择主要软件是改peercast&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;创新项目的意义在于创新，我们这次在软件设计方面说得有点诚实了，因为是基于peercast的，所以我们在项目申请书中就直接写上了通过改这个开源的软件来实现服务器端和客户端，这样似乎就有那么点抄袭的意味了，何来的创新之举？本来人家东西已经做得很不错了，我们只是改改界面，或者根据需要增减功能，这样显然没法打动老师们的心了，所以说如果这次我们的内容中没有写上模仿peercast的话那么或许上榜的可能性会大大提高，虽然有可能有点假，不过说回来那些创新项目大部分也就是这么假出来的吧，哈哈</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3、导师选择上出现问题</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;导师上又是我们所犯的一个比较大的错误了，起初因为准备不足，所以一直没有去联系导师，后来实在没有办法了，就找了校团委的老师当导师了，可惜人家校团委是管理学生工作的，并不是搞科研搞创新的，所以这点上就出现了一个严重的问题了，qqlook选的导师就比较的大牛，是我们院乃至整个学校科研领域都很有名的人了，所以他要是你的导师，那么怎么着上线的机会会比我们大吧。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这样大概地总结了三点，其实失败应该是一个很正常的事情，重要的要从每一次失败中吸取教训，这样才能够进步，才能够向成功迈进一步。</p>', '<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;学校的大学生创新实验今天国家级的审批已经出来了，这次我们的项目就这样泡汤了，本来还觉得很有戏的，这样的结果让人很是郁闷，估计yuzhoumu应该也会很郁闷吧，毕竟他为这个东西确实是找了不少资料，并且写项目的那段时间去办公室都看他大部分时间躺在椅子上，估计又是一整晚找资料，写报告吧。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过还好qqlook的项目被批下来了，国家级的，总算我们没有全军覆没，这次估计又得好好地敲一次qqlook的BG了，不敲白不敲了，^-^&nbsp;&nbsp;&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;下面我就大概地总结一下这次创新实验的失利吧，我们申请的项目是《基于P2P的IPTV在大型局域网中的应用》，这所以选这个课题是因为暑假期间yuzhoumu、qqlook还有我等几个人一直在研究视频直播这个东西，yuzhoumu在回校之后就开始对peercast这个软件产生了很大的兴趣，于是乎好久天都在研究这个东西如何搭建一个p2p的视频直播系统，但最后由于文档太多，而且配置起来很麻烦，最后终究还是没有配置成功，不过对这个用C++写出来的开源软件，yuzhoumu还是非常的感兴趣的，后来我和qqlook把NPLIVE的网站给写出来了，后台的直播系统是yuzhoumu给弄出来的，用的是微软的一整套mediaserver系统</p>', 4741, '["生活"]', 4, 0, 1, '2009-11-05 15:20:05', '2009-11-05 15:20:05', '2009-11-05 15:20:05'),
(9, 1, 5, '北京的第二场雪', '<p>&nbsp;&nbsp;&nbsp;&nbsp;晚上，早早地上完了高老师的信息对抗实验课，走在路上的时候就感觉到了少许的凉意，本来以为不会太冷的天气突然下起了小雨，今天出门的时候只穿了一个短袖加上一个外套，现在已经冻得我浑身是发抖了，回到办公室的时候才感觉到了一点温暖。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;回到办公室后便开始服务器的预算了，不知不觉中就到了十一点了，每天都是这样，除了睡觉的时间其他的几乎都呆在了办公室，写代码、写预算、写总结&hellip;&hellip;&hellip;&hellip; 每天都有忙不完的一堆事，想起来就让头疼，于是也就喜欢上了一杯一杯的茶、和一杯一杯的咖啡，不知道这些东西是不是真的能够提神，但是这些都已经不重要了，重要的是白色的热气中能够感受到一丝丝的温暖、一丝丝的放松。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;出机房的时候便听到了楼道里有人说下雪了，没有在意，因为好像那些人离我的生活很远，于是他们的声音也没有在乎。下楼的时候刚好和一个女生在一个电梯里，她穿着一件雨衣，这样我才想起了外面在下雪，到了一楼的时候一哥们正在扫身上的雪，这样我只好又从一楼回到了十一楼，拿了把伞出来了，走出新一外面已是白茫茫的一片了，外面的风很大，我就这样穿着短袖+外套在风雪中走着，好长一段路上只有我一个人走着，地上依稀能够看见一排排脚印被雪慢慢地盖上了，走到新食堂的时候发现路上用雪写了很大的两个字，好像是认识的一个女生的名字，走到食堂北面的时侯就不再是我一个人了，而且此时的风也大了起来，把伞挡在前面的时候雪便从侧面落到了衣服上，风向也在变动，一会朝东一会朝西的，路上偶尔能听到几句激动地尖叫声，他们为什么这么兴奋呢？为什么我没有呢？我只是低着头，把伞挡在前面加快了步伐继续赶着路。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;在雪的反射下，整个夜晚显得不是那么的黑暗，只要有路灯的地方都能够感觉到特别的亮堂，不知不觉地走到了5、6号楼下，每天十一点路过的时候总有一对对的情侣们依依不舍地纠缠着，即使在这么冷的天也不例外，习惯了不理会这些，只是这回的风好像又改变了方向，让我还没有来得及反应的时候便吹了一身的雪，我估摸着风向，把伞挡着，伞挡住了视线，这样感觉我就是一个人在走着，看不见前面的人，也就不用担心前面的人会不会看见我了，路上有许多的人，但却只有我一个人，我打着伞，这伞就是我的天空，我想象着自己俯瞰这幅景象，白茫茫的路上只有一个人打着伞，匆匆忙忙地赶着路，甚至地上都没有踩出一个脚印。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;雪总是来得很突然，第一场雪来的那天刚好是新浪学院开学典礼，八点钟的开学典礼让我不得不在七点多就起床了，那天离开宿舍的时候雪并不是很大，只是在地上铺了薄薄的一层霜，后来开学典礼结束后，街上已经是白茫茫的一片了，树的叶子还没有来得落尽，一路上许多树干都被压断在路上，没有受过深秋的洗礼，寒冬便早早地到来了。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;写到最后的时候已经是没有什么流水账可写了，现在已经是凌晨一点四十了，外面还有一些说话、玩耍的声音，小时候总是很期待下雪，而现在少了那份期待，却喜欢看着别人在雪地里面打雪仗、堆雪人，或许一个人的时候只是孤单，但却不寂寞</p>', '<p>&nbsp;&nbsp;&nbsp;&nbsp;晚上，早早地上完了高老师的信息对抗实验课，走在路上的时候就感觉到了少许的凉意，本来以为不会太冷的天气突然下起了小雨，今天出门的时候只穿了一个短袖加上一个外套，现在已经冻得我浑身是发抖了，回到办公室的时候才感觉到了一点温暖。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;回到办公室后便开始服务器的预算了，不知不觉中就到了十一点了，每天都是这样，除了睡觉的时间其他的几乎都呆在了办公室，写代码、写预算、写总结&hellip;&hellip;&hellip;&hellip; 每天都有忙不完的一堆事，想起来就让头疼，于是也就喜欢上了一杯一杯的茶、和一杯一杯的咖啡，不知道这些东西是不是真的能够提神，但是这些都已经不重要了，重要的是白色的热气中能够感受到一丝丝的温暖、一丝丝的放松。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;出机房的时候便听到了楼道里有人说下雪了，没有在意，因为好像那些人离我的生活很远，于是他们的声音也没有在乎。下楼的时候刚好和一个女生在一个电梯里，她穿着一件雨衣，这样我才想起了外面在下雪，到了一楼的时候一哥们正在扫身上的雪，这样我只好又从一楼回到了十一楼，拿了把伞出来了，走</p>', 1676, '["生活"]', 0, 0, 1, '2009-11-08 17:30:23', '2009-11-08 17:30:23', '2009-11-08 17:30:23'),
(10, 1, 5, '拆笔记本的那些事……', '<p>&nbsp;&nbsp;&nbsp;&nbsp;光棍节那天，刚好闲着没事，于是乎想清理一下笔记本的灰尘，因为最近风扇老是转个不停，而且声音还特大，每次都吵得我特烦，于是乎终于下定决心要给风扇来个清理了。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;吃完晚饭后就立马开工了，刚开始的时候真不知道从哪里开始，于是乎便从最基本的开始拆，先把内存、硬盘和风扇口这三个地方给拆开了，我一看发现风扇根本这样看都看不到，于是乎就考虑了一下这个构造，发现必须要把整个主板给拆了才能看见风扇，这可给了我一个难题，到底是拆还是不拆呢？&nbsp;虽然以前没有拆过这么深，不过我还是决定给它拆了，抱着拆坏了去中关村修的打算，顺便学习下笔记本的拆装方法，所谓修电脑的话，还是从自己的电脑开始拆起，弄坏了也好说，要是给别人弄坏了就麻烦。于是乎便开始拧后盖的螺丝了，找了又找，确认全部都拧开了发现根本还是打不开后盖，于是我有看了看前面的键盘部分，发现里面有个东西隐藏了几个螺丝，接着便把键盘先给拆了下来，还有显示器，里面有几根线跟主板连着的全部被拔来了，通过这一部之后键盘和显示器便完全可以拿出来了，然后整个电脑只剩下一个底座和主板了，接着又是一个个螺丝把主板也卸下来了，这回好了把风扇和散热片取下来了，发现散热口基本上是被灰尘给堵上了，用画笔一扫，灰尘到处飞舞，清理后便便重新给还原了。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;重新装好后一看发现多出了四个螺丝，这回可把我乐了，上次换主板的时候，那位哥们也是硬给我多出了几个螺丝，还一面说少装几个没事的，这回一下又少四个了，我急着测试一下电脑还能用不，结果一看 果然能用，这可让我兴奋了好久。不过用了一会之后发现了声音功能已经没有了，当时我就蒙了，这回可怎么办，试着重启了下电脑，然后重新在BIOS中检查了一下硬件，显示完全没有问题，这回可是郁闷坏我了，我不得不又拿起螺丝刀给再拆了一遍。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;第二次拆的时候就感觉熟练多了，直接知道怎么拆的，很快就把主板给拆出来了，然后研究了一下扬声器的走线，发现上次安装的时候与扬声器相关的两个插线插得有点松动，于是乎这回我用力的给插紧了，再次还原的时候就比较简单了，很快就弄好了，这次再已测试，完全通过，声音也有了，而且风扇也没有以前那么响了，这回算是终于大功告成了，比上次好的是，这次只多出两个螺丝，还好还好，比上次多出的四个进步不少。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;拆完电脑之后，发现好多东西还是需要自己多动手的，实际中的东西和理论很不一样的，理论当然是基础，但是只会理论知识的话那也只能算是个书呆子吧。还有就是要敢于尝试，有许多机会就是因为自己没有信心不敢尝试而失去，所以即使是自己没有经验的事也要敢于是尝试，在尝试的过程中可以查找资料，向别人询问，向别人学习，在尝试的过程中会使自己逐渐变得强大。</p>', '<p>&nbsp;&nbsp;&nbsp;&nbsp;光棍节那天，刚好闲着没事，于是乎想清理一下笔记本的灰尘，因为最近风扇老是转个不停，而且声音还特大，每次都吵得我特烦，于是乎终于下定决心要给风扇来个清理了。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;吃完晚饭后就立马开工了，刚开始的时候真不知道从哪里开始，于是乎便从最基本的开始拆，先把内存、硬盘和风扇口这三个地方给拆开了，我一看发现风扇根本这样看都看不到，于是乎就考虑了一下这个构造，发现必须要把整个主板给拆了才能看见风扇，这可给了我一个难题，到底是拆还是不拆呢？&nbsp;虽然以前没有拆过这么深，不过我还是决定给它拆了，抱着拆坏了去中关村修的打算，顺便学习下笔记本的拆装方法，所谓修电脑的话，还是从自己的电脑开始拆起，弄坏了也好说，要是给别人弄坏了就麻烦。于是乎便开始拧后盖的螺丝了，找了又找，确认全部都拧开了发现根本还是打不开后盖，于是我有看了看前面的键盘部分，发现里面有个东西隐藏了几个螺丝，接着便把键盘先给拆了下来，还有显示器，里面有几根线跟主板连着的全部被拔来了，通过这一部之后键盘和显示器便完全可以拿出来了，然后整个电脑只剩下一个底座和主板了，接着又是一个个螺丝把主板也卸下来了，这回好了把风扇和散热片取下来了，发现散热口基本上是被灰尘给堵上了，用画笔一扫，灰尘到处飞舞，清理后便便重新给还原了。</p>', 1786, '["生活"]', 0, 0, 1, '2009-11-11 08:29:13', '2009-11-11 08:29:13', '2009-11-11 08:29:13'),
(11, 1, 5, '博客的服务器顺利升级成为LINUX系统', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;此段时间博客又陆续关闭了几天，最近一直在学习LINUX操作系统，发现了LINUX操作系统之强大，于是乎下定决心再升级一台服务器到LINUX系统，刚好有226上的一块硬盘出了点问题，于是便把226拖了出来，开始折腾LINUX。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;经过了几天的折腾终于装上了Ubuntu9.04，搭建好了LAMP服务器，慢慢地对LINUX服务器的配置有点熟悉了，VIM的操作也更加熟悉了，感觉最深的还是Ubuntu的apt-get软件安装方式，只能说是太爽了，特别适合于新手学习用，大赞联盟的LINUX源，速度那个快呀^_^。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;很明显的一点就是LINUX的执行效率要比win2003高了不少，至少现在我打开页面的时候基本上时瞬间的，比以前的经常MYSQL出点小故障的时候好多了，看来以后架服务器首选的还是LINUX系统了，关键这次装的是desktop版本的，没有装server版本，主要是考虑226做练习用的，无论是给良乡孩子还是自己练习，后来也装了一个server在虚拟机上，默认没有图行界面的，有点烦的就是做错了任何一个动作，电脑蜂鸣器总是会发出&ldquo;哒&rdquo;的一声，这点倒是恶心到我了，想起了以前在论坛服务器上装Debian的时候差不多，对服务器蜂鸣器是一个考验呀。得去网上找找关掉蜂鸣器的响声的方法，否则太让人郁闷了。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;关于LINUX的一些学习的东西，以后会慢慢的以日志的形式发布出来，敬请期待！！</p>', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;此段时间博客又陆续关闭了几天，最近一直在学习LINUX操作系统，发现了LINUX操作系统之强大，于是乎下定决心再升级一台服务器到LINUX系统，刚好有226上的一块硬盘出了点问题，于是便把226拖了出来，开始折腾LINUX。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;经过了几天的折腾终于装上了Ubuntu9.04，搭建好了LAMP服务器，慢慢地对LINUX服务器的配置有点熟悉了，VIM的操作也更加熟悉了，感觉最深的还是Ubuntu的apt-get软件安装方式，只能说是太爽了，特别适合于新手学习用，大赞联盟的LINUX源，速度那个快呀^_^。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;很明显的一点就是LINUX的执行效率要比win2003高了不少，至少现在我打开页面的时候基本上时瞬间的，比以前的经常MYSQL出点小故障的时候好多了，看来以后架服务器首选的还是LINUX系统了，关键这次装的是</p>', 2076, '["Linux","生活"]', 2, 0, 1, '2009-11-22 15:50:27', '2009-11-22 15:50:27', '2009-11-22 15:50:27'),
(12, 1, 11, '艺术特长生网站基本完工', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;记得接这个项目的时候是10月10多号，那时张老师找我和qqlook去主楼办公室谈要开发艺术特长上报名网站的事宜，之后张老师还请我们两吃饭了，那时感觉任务挺繁重的，毕竟大三了课真是不少呀，而且难度上也是非常的大的，但是我决定还是接下来了，毕竟也是一次很好的练手的机会。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;于是乎在以后的一个月里面基本上就是每天两三点睡觉了，然后上午十一点起床，该上的课基本上都被翘掉了，刚开始写的时候感觉挺不错的，因为刚开始写的是功能类和一些防注入的函数，感觉写类和函数的过程中学习到东西挺多的，这次还是初次用面向对象的方式写，而且也参考了几本书上的关于代码复用的问题，以及基本MVC构架的实现。基本上写完了功能的类之后便开始写前台界面了，刚开始写界面的时候基本上没有什么思路的，因为项目不是像公司那样做的大项目各种需求分析，我们的项目就是张老师说要写一个招生网站，然后希望有发布新闻和登记、发布成绩及打印报名表等功能就是这么简单的需求 ^_^，其他部分就都得我们来想象了，于是乎有一天偶然点上了进了学校的一个网站发现整个页面的构架都很适合这次的需求，于是我便开始模仿那个网站开始写静态页了。期间实验慢慢地多了起来，于是乎各种事也开始多了起来，弄得我好一段时间都没有什么心情写站了，本来应该是11月15日上交的，但是15号的时候基本上只完成了前台功能，但也勉强交上去了，之后便一周都在拖着没有写后台，因为实在是不想写呀，我一个人的写前台布局、写PHP、写CSS还要考虑各种浏览器兼容性，最要命的是还要搞需求分析，哎&nbsp; 真是让人都不了呀 &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;最后直到22号和23号的时候团委那边各种电话催我的时候，才不得不在两天之类把后台的基本写完了，然后就是去团委跑了两三次，每次总是接一堆事回来，期间还帮着写了一个简单的团校培训的报名页面，因为时间紧迫呀，然后直接写了一个处理页面，然后偷懒用了phpMyAdmin的导出数据为Exel的功能，这点确实有点粗糙了 ^-^ 不过时间确实是太紧了。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;到今天的时候网站功能已经基本上完全写完了，期间由一个问题碰到了一个setcookie的问题，因为我设置cookie的时间是time()+360，6分钟的存活期，但是那天在团委办公室里面接连用两台电脑都不能登陆上考生，于是我各种找问题，因为在我的电脑上可以登陆，但是在那两台电脑就不行，检查浏览器没有禁用cookie，而且登陆其他网站都没有问题，最后找了块一小时后终于找出原因了，这个跟cookie的原理有关，cookie的存活期是time()函数+360，也就是说时间是以服务器时间为准的，但是cookie的结束时间却与服务器时间没有关系，大个比方如果服务器时间是10：00，cookie存活期是360s，而客户端的时间是10：07分这个样子的话setcookie这个函数用完之后cookie立即失效了，所以根本就无法登陆，最后为了让老师们能够登录，直接给cookie时间设为time()+3600*24 这样的话是一天的存活期，改好之后就能登录了。但是这样的话感觉安全性好差呀&hellip;&hellip;&hellip;&hellip; ，最终干脆给改成了session验证了。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;今天过完后就是校历的十三周了，十六周开始便有一堆堆的考试来了，看来接下来的日子得开始努力补习功课了，不知道这样的日子过得是堕落还是&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;</p>', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;记得接这个项目的时候是10月10多号，那时张老师找我和qqlook去主楼办公室谈要开发艺术特长上报名网站的事宜，之后张老师还请我们两吃饭了，那时感觉任务挺繁重的，毕竟大三了课真是不少呀，而且难度上也是非常的大的，但是我决定还是接下来了，毕竟也是一次很好的练手的机会。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;于是乎在以后的一个月里面基本上就是每天两三点睡觉了，然后上午十一点起床，该上的课基本上都被翘掉了，刚开始写的时候感觉挺不错的，因为刚开始写的是功能类和一些防注入的函数，感觉写类和函数的过程中学习到东西挺多的，这次还是初次用面向对象的方式写，而且也参考了几本书上的关于代码复用的问题，以及基本MVC构架的实现。基本上写完了功能的类之后便开始写前台界面了，刚开始写界面的时候基本上没有什么思路的，因为项目不是像公司那样做的大项目各种需求分析，我们的项目就是张老师说要写一个招生网站，然后希望有发布新闻和登记、发布成绩及打印报名表等功能就是这么简单的需求 ^_^，其他部分就都得我们来想象了，于是乎有一天偶然点上了进了学校的一个网站发现整个页面的构架都很适合这次的需求，于是我便开始模仿那个网站开始写静态页了。期间实验慢慢地多了起来，于是乎各种事也开始多了起来，弄得我好一段时间都没有什么心情写站了，本来应该是11月15日上交的，但是15号的时候基本上只完成了前台功能，但也勉强交上去了，之后便一周都在拖着没有写后台，因为实在是不想写呀，我一个人的写前台布局、写PHP、写CSS还</p>', 1851, '["生活"]', 0, 0, 1, '2009-11-29 15:01:58', '2009-11-29 15:01:58', '2009-11-29 15:01:58'),
(15, 1, 4, '网协的人都吃挂面去了？', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在联盟上看到这句的时候觉得很不是滋味，面对伸手党们的抱怨声，很是无奈。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;其实我们也想把服务做好，但是我们也是学生，我们大三了，也需要学习，也需要考试，而且课程上的压力使我们根本不可能每天都盯着服务器吧。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;想着刚过来本部的时候是暑假，参加完干训后我就每天呆在机房了，期间为了实现那些的拟定计划，于是乎便没日没夜地开始了写代码，那段时间也是挺辛苦的，每天都是四五点睡觉，号称&ldquo;黎明党&rdquo;，然后就直接睡到下午一两点，直接早餐省了、中餐省了，一天一顿晚饭。后来刘贺和宋樵回来了，我们便流行了一阵吃早餐，什么叫吃早餐？其实就是一晚不睡觉然后到7点多的时候吃完早餐再睡觉。就是这样的状态过完了一个暑假，后来发现体质下降真是呈直线状态了</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;开学后生物钟一时没有调节过来，还得改写NPLIVE，所以开学那部分课几乎没有怎么听，这也造成了后面的课没法听了，后来接了艺术特长声招新网站，那一个月的时间很多时候都是晚上三四点睡觉，白天十一二点起床，该上的课也基本上翘光了，该交的作业一堆没有交，实验倒还好上课去打个酱油，然后再找个时间抄个实验报告也就完事了，每天十一点50多一个人从新一回寝室的时候偶尔也会感觉到寂寞，后来十二点准时关门的大爷也慢慢的推迟了关门的时间&hellip;&hellip;&hellip;&hellip;。同班的很好的朋友也基本上很难见到我了，因为每天的时候都呆在了机房，于是乎很多时候都是一个人去吃饭，去跑团委，去接各种各样的电话，其实我又何尝想和一堆朋友一起吃饭、聊天、上课、玩DOTA呢&hellip;&hellip;&hellip;&hellip;</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;而现在马上就要面临考试了，我现在的课本基本上还是新的，什么东西都得从第一页开始看，昨晚的时候第一次去自习，结果发现课程各种难，各种看得我恶心想吐，然后心烦得早早地回来了。但是我很无奈，因为我和大家一样也不想挂科，所以我还是得硬着头皮地看是从第一页开始，放弃始终不是我应该做的&hellip;&hellip;&hellip;&hellip;</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;所谓喝水不忘挖井人，我之所以说上面这些是希望伸手党们能够也站在我们的角度考虑一下问题，不要一碰到问题就是各种喷，作为一个大学生，最起码的素质还是要有的。</p>', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在联盟上看到这句的时候觉得很不是滋味，面对伸手党们的抱怨声，很是无奈。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;其实我们也想把服务做好，但是我们也是学生，我们大三了，也需要学习，也需要考试，而且课程上的压力使我们根本不可能每天都盯着服务器吧。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;想着刚过来本部的时候是暑假，参加完干训后我就每天呆在机房了，期间为了实现那些的拟定计划，于是乎便没日没夜地开始了写代码，那段时间也是挺辛苦的，每天都是四五点睡觉，号称&ldquo;黎明党&rdquo;，然后就直接睡到下午一两点，直接早餐省了、中餐省了，一天一顿晚饭。后来刘贺和宋樵回来了，我们便流行了一阵吃早餐，什么叫吃早餐？其实就是一晚不睡觉然后到7点多的时候吃完早餐再睡觉。就是这样的状态过完了一个暑假，后来发现体质下降真是呈直线状态了</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;开学后生物钟一时没有调节过来，还得改写NPLIVE，所以开学那部分课几乎没有怎么听，这也造成了后面的课没法听了，后来接了艺术特长声招新网站，那一个月</p>', 2264, '["Netpioneer"]', 12, 0, 1, '2009-12-10 08:14:34', '2009-12-10 08:14:34', '2009-12-10 08:14:34'),
(16, 1, 11, '回顾09', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;话说这个09年总结来得确实是有点晚了，一直以来就不喜欢各种总结以及写的各种长篇大论，但是眼看一年又结束了，还是需要回顾一下这年的一些进步以及那些还没有达到或者还没有做好的事情。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;还记得刚进入09年的时候，便说明年就要读大四了，对于一个刚入大学一年多的我们来说或许是有点急促，但是那份对毕业后的迷茫早就已经写在脸上了。于是乎日子也就开始一天天地过了，在大二上学期认真学习了一段时间之后居然也拿了一次奖学金。然后在论坛六周年的时候担任了总策划，那次真的是忙了快两个月了，被各种事情所烦着，不过还好虽然当天彩排的时候效果一般，但是却在晚上的正式演出中基本发挥正常，算是彻底地松了口气，在此不得不感谢为晚会努力的所有人。晚会完了之后便出去K歌，进了网协之后一直叫vice为老大，那天晚上夜宵的时候就听vice和杨进、阿不讲那是时候的各种事，感觉身上的担子也越来越重。就这样生活也就继续着，无所谓堕不堕落，只是晚上一把DOTA的生活还是维持了，要考试了，突击得像什么一样，不过有点幸运的是图书馆地下室</p>\r\n<p>\r\n	&nbsp;</p>\r\n<p>\r\n	(未完待续)</p>', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;话说这个09年总结来得确实是有点晚了，一直以来就不喜欢各种总结以及写的各种长篇大论，但是眼看一年又结束了，还是需要回顾一下这年的一些进步以及那些还没有达到或者还没有做好的事情。</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;还记得刚进入09年的时候，便说明年就要读大四了，对于一个刚入大学一年多的我们来说或许是有点急促，但是那份对毕业后的迷茫早就已经写在脸上了。于是乎日子也就开始一天天地过了，在大二上学期认真学习了一段时间之后居然也拿了一次奖学金。然后在论坛六周年的时候担任了总策划，那次真的是忙了快两个月了，被各种事情所烦着，不过还好虽然当天彩排的时候效果一般，但是却在晚上的正式演出中基本发挥正常，算是彻底地松了口气，在此不得不感谢为晚会努力的所有人。晚会完了之后便出去K歌，进了网协之后一直叫vice为老大，那天晚上夜宵的时候就听vice和杨进、阿不讲那是时候的各种事，感觉身上的担子也越来越重。就这样生活也就继续着，无所谓堕不堕落，只是晚上一把DOTA的生活还是维持了，要考试了，突击得像什么一样，不过有点幸运的是图书馆地下室</p>', 2145, '["年终"]', 2, 0, 1, '2010-01-05 15:58:22', '2010-01-05 15:58:22', '2010-01-05 15:58:22'),
(48, 1, 3, 'apache反向代理和负载均衡小结', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;apache功能其实很是强大，最近一段时间研究了下apache的反向代理和负载均衡，反向代理网协的外网出口和我的博客出口就是通过apache的反向代理实现的，总结一下，重点说说负载均衡的配置。<br />\r\n	首先说先实验环境吧<br />\r\n	操作系统：DEBIAN 5.03（Ubuntu也可以同理配置）</p>\r\n<p>\r\n	<span style="font-size: 16px"><strong>一、安装apache加载模块</strong></span></p>\r\n<p>\r\n	apt-get install apache2<br />\r\n	然后进入到apache的配置目录<br />\r\n	cd /etc/apache2<br />\r\n	apache的反向代理和负载均衡其实利用的都是反向代理的原理，至于什么叫做反向代理可以点此<a href="http://baike.baidu.com/view/1165595.htm">http://baike.baidu.com/view/1165595.htm</a></p>\r\n<p>\r\n	关键需要加载下面三个模块<br />\r\n	LoadModule proxy_module modules/mod_proxy.so&nbsp;&nbsp; <br />\r\n	LoadModule proxy_balancer_module modules/mod_proxy_balancer.so&nbsp;&nbsp; <br />\r\n	LoadModule proxy_http_module modules/mod_proxy_http.so&nbsp;</p>\r\n<p>\r\n	由于Debian系统下apache所有的模块都是放在/usr/lib/apache2/modules/里面的，通过/etc/apache2/mods-available里面的*.load加载的，如果要模块的话需要在/etc/apache2/mods-enabled里面用ln建立链接，当然你也可以再/etc/apache2/apache2.conf里面直接把上面三句话写进入，但是不建议这样做。执行代码如下<br />\r\n	ln -s /etc/apache2/mods-available/proxy.load /etc/apache2/mods-enabled/proxy.load<br />\r\n	ln -s /etc/apache2/mods-available/proxy_http.load /etc/apache2/mods-enabled/proxy_http.load<br />\r\n	ln -s /etc/apache2/mods-available/proxy_balancer.load /etc/apache2/mods-enabled/proxy_banancer.load</p>\r\n<p>\r\n	做好上面几步之后我们重启下apache<br />\r\n	/etc/init.d/apache2 restart</p>\r\n<p>\r\n	<span style="font-size: 16px"><strong>二、配置反向代理功能</strong></span></p>\r\n<p>\r\n	加载完模块后可以建立一个虚拟主机来作为反向代理<br />\r\n	vi /etc/apache2/sites_available/proxy<br />\r\n	配置如下<br />\r\n	Listen 202.xxx.xxx.xxx:80&nbsp;&nbsp;&nbsp;&nbsp; (别人访问的IP和端口)<br />\r\n	&lt;VirtualHost 202.xxx.xxx.xxx:80&gt; (同上)<br />\r\n	ServerAdmin admin@bit.net<br />\r\n	ProxyRequests Off&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （说明开启的是反向代理）<br />\r\n	ProxyMaxForwards 100<br />\r\n	ProxyPreserveHost On<br />\r\n	ProxyPass / http://10.x.xx.xxx/ （转发到url上的请求）<br />\r\n	ProxyPassReverse / http://10.x.xx.xxx/<br />\r\n	&nbsp;&lt;Proxy *&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (这段是访问的控制)<br />\r\n	&nbsp;Order Deny,Allow<br />\r\n	&nbsp;Allow from all<br />\r\n	&nbsp;&lt;/Proxy&gt;<br />\r\n	&lt;/VirtualHost&gt;<br />\r\n	然后再在/etc/apache2/sites_enabled/里面建立ln链接<br />\r\n	ln -s /etc/apache2/sites_available/proxy /etc/apache2/sites_enabled/proxy<br />\r\n	重启apache<br />\r\n	/etc/init.d/apache2 restart</p>\r\n<p>\r\n	然后反向代理就开启了<br />\r\n	当别人输入http://202.xxx.xxx.xxx时 就会通过反向代理转到http://10.x.xx.xxx上，这样简单的反向代理功能就开启了</p>\r\n<p>\r\n	<span style="font-size: 16px"><strong>三、apache负载均衡配置</strong></span></p>\r\n<p>\r\n	<strong>a、简单的负载均衡</strong></p>\r\n<p>\r\n	然后接着讲apache的负载均衡模块吧<br />\r\n	同理建立一个虚拟主机来作为负载均衡<br />\r\n	vi /etc/apache2/sites_available/balancer<br />\r\n	配置如下<br />\r\n	Listen 202.x.xx.xxx:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (别人访问的IP和端口)<br />\r\n	&lt;VirtualHost 202.x.xx.xxx:80&gt;</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ServerAdmin admin@bit.com<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ProxyRequests Off<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; Proxypass / balancer://proxy/&nbsp; <br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; &lt;Proxy balancer://proxy&gt;<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Order Deny,Allow<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Allow from all<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BalancerMember http://10.0.0.1<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BalancerMember http://10.0.0.2<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Proxy&gt;</p>\r\n<p>\r\n	&lt;/VirtualHost&gt;<br />\r\n	从上面的 ProxyRequests Off 这条可以看出，实际上负载均衡器就是一个反向代理，只不过它的代理转发地址不是某台具体的服务器，而是一个 balancer://协议地址<br />\r\n	ProxyPass / balancer://proxy/ 协议地址可以随便定义。然后，在&lt;Proxy&gt;段中设置该balancer协议的内容即可。 BalancerMember指令可以添加负载均衡组中的真实服务器地址。</p>\r\n<p>\r\n	然后再在/etc/apache2/sites_enabled/里面建立ln链接<br />\r\n	ln -s /etc/apache2/sites_available/balancer /etc/apache2/sites_enabled/balancer<br />\r\n	重启apache<br />\r\n	/etc/init.d/apache2 restart<br />\r\n	这样apache的负载均衡就配置好了</p>\r\n<p>\r\n	如果访问http://202.x.xx.xxx的时候会均匀地打开http://10.0.0.1和http://10.0.0.2,比如你两次打开http://202.x.xx.xxx会又一次打开http://10.0.0.1一次打开http://10.0.0.2这样就是两台服务器接受的请求平均了，达到了负载均衡的效果。</p>\r\n<p>\r\n	<strong>b、负载比例分配</strong></p>\r\n<p>\r\n	当然如果你发现你的两台服务器配置不一样，一台较好，一台较差，那么就要开始配置不同比例的负载均衡了。如果两台服务器你想配置负载分配比为3:1则配置文件如下</p>\r\n<p>\r\n	Listen 202.x.xx.xxx:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (别人访问的IP和端口)<br />\r\n	&lt;VirtualHost 202.x.xx.xxx:80&gt;</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ServerAdmin admin@bit.com<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ProxyRequests Off<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; Proxypass / balancer://proxy/&nbsp; <br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; &lt;Proxy balancer://proxy&gt;<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Order Deny,Allow<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Allow from all<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BalancerMember http://10.0.0.1&nbsp;&nbsp; loadfactor= 3<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BalancerMember http://10.0.0.2&nbsp;&nbsp; loadfactor= 1<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Proxy&gt;</p>\r\n<p>\r\n	&lt;/VirtualHost&gt;</p>\r\n<p>\r\n	<strong>c、负载分配算法</strong></p>\r\n<p>\r\n	当然你可能想通过不同的算法实现负载均衡，比方说按照请求次数，或者按照流量均衡，这里用到的指令是lbmethod<br />\r\n	lbmethod可能的取值有： <br />\r\n	lbmethod=byrequests 按照请求次数均衡(默认) <br />\r\n	lbmethod=bytraffic 按照流量均衡 <br />\r\n	lbmethod=bybusyness 按照繁忙程度均衡(总是分配给活跃请求数最少的服务器)</p>\r\n<p>\r\n	按照流量的均衡配置如下</p>\r\n<p>\r\n	Listen 202.x.xx.xxx:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (别人访问的IP和端口)<br />\r\n	&lt;VirtualHost 202.x.xx.xxx:80&gt;</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ServerAdmin admin@bit.com<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ProxyRequests Off<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; Proxypass / balancer://proxy/&nbsp; <br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ProxySet lbmethod=bytraffic&nbsp;&nbsp; （加上这句）<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; &lt;Proxy balancer://proxy&gt;<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Order Deny,Allow<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Allow from all<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BalancerMember http://10.0.0.1&nbsp;&nbsp; loadfactor= 3<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BalancerMember http://10.0.0.2&nbsp;&nbsp; loadfactor= 1<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Proxy&gt;</p>\r\n<p>\r\n	&lt;/VirtualHost&gt;<br />\r\n	这样你的负载均衡就可以按照流量均衡了</p>\r\n<p>\r\n	<strong>d、热备份<br />\r\n	</strong>在最后讲一讲热备份吧，热备份的实现很简单，只需添加 status=+H 属性，就可以把某台服务器指定为备份服务器，配置文件如下<br />\r\n	Listen 202.x.xx.xxx:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (别人访问的IP和端口)<br />\r\n	&lt;VirtualHost 202.x.xx.xxx:80&gt;</p>\r\n<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ServerAdmin admin@bit.com<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ProxyRequests Off<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; Proxypass / balancer://proxy/&nbsp; <br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; ProxySet lbmethod=bytraffic&nbsp;&nbsp; （加上这句）<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; &lt;Proxy balancer://proxy&gt;<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Order Deny,Allow<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Allow from all<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BalancerMember http://10.0.0.1&nbsp;&nbsp; <br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BalancerMember http://10.0.0.2&nbsp;&nbsp; status=+H<br />\r\n	&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Proxy&gt;</p>\r\n<p>\r\n	&lt;/VirtualHost&gt;<br />\r\n	&nbsp; 从配置中可以看出请求总是流向http://10.0.0.1，一旦http://10.0.0.1挂掉， Apache会检测到错误并把请求分流给 http://10.0.0.2。Apache会每隔几分钟检测一下http://10.0.0.1的状况，如果http://10.0.0.1恢复，就继续使用http://10.0.0.1，这样就可以实现热备份了</p>\r\n<p>\r\n	<br />\r\n	好了总结完了，最近发现apache的功能确实是很强大，各种模块都有待发掘，一直在听说Nginx的并发比apache要好，有时间再发个两者的比较的文章吧。</p>', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;apache功能其实很是强大，最近一段时间研究了下apache的反向代理和负载均衡，反向代理网协的外网出口和我的博客出口就是通过apache的反向代理实现的，总结一下，重点说说负载均衡的配置。<br />\r\n	首先说先实验环境吧<br />\r\n	操作系统：DEBIAN 5.03（Ubuntu也可以同理配置）</p>\r\n<p>\r\n	<span style="font-size: 16px"><strong>一、安装apache加载模块</strong></span></p>\r\n<p>\r\n	apt-get install apache2<br />\r\n	然后进入到apache的配置目录<br />\r\n	cd /etc/apache2<br />\r\n	apache的反向代理和负载均衡其实利用的都是反向代理的原理，至于什么叫做反向代理可以点此<a href="http://baike.baidu.com/view/1165595.htm">http://baike.baidu.com/view/1165595.htm</a></p>', 4424, '["Apache"]', 0, 0, 1, '2010-01-06 08:33:26', '2010-01-06 08:33:26', '2010-01-06 08:33:26'),
(50, 1, 4, '好吧，找乐网的硬盘又全线飘红了', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;上学期开始找乐服务器老是运行很慢很慢，然后又莫名其妙地死机呢，而且有些歌曲无法播放，看了下错误的日志，然后发现是硬盘出了点问题，于是用HD检查了下，检查的结果如下图所示</p>\r\n<p>\r\n	<a href="/upload/old/201003/901332ed910d75f86cc353643e3f7ebe20100307000247.png" id="ematt:2" target="_blank"><img alt="点击查看原图" border="0" src="/upload/old/201003/thum-901332ed910d75f86cc353643e3f7ebe20100307000247.png" /></a></p>\r\n<p>\r\n	&nbsp;找乐网共有三个硬盘存放歌曲，这个盘是大小148G的，然后剩余空间是10G，估计有3000专辑丢失了，现在试运行找乐网，硬盘也会去维修中，至于能恢复多少数据就要看人品了，实在不行就欢迎大家积极上传，又是一个获得威望的好机会了</p>', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;上学期开始找乐服务器老是运行很慢很慢，然后又莫名其妙地死机呢，而且有些歌曲无法播放，看了下错误的日志，然后发现是硬盘出了点问题，于是用HD检查了下，检查的结果如下图所示</p>', 2734, '["Netpioneer"]', 4, 1, 1, '2010-01-24 18:56:46', '2010-01-24 18:56:46', '2016-06-13 02:43:12'),
(51, 1, 4, '找乐硬盘已经恢复', '<p>\r\n	&nbsp;&nbsp;&nbsp;&nbsp;上周日的时候去了一家公司恢复找乐硬盘，一下午之后终于所有数据全部恢复出来了，花费不少。估计以后硬盘问题会频繁出现，服务器老化是一个必须面对的问题，得经常备份备份数据了 &hellip;&hellip;&hellip;&hellip;&hellip;&hellip;</p>', '', 2234, '["Netpioneer"]', 2, 0, 1, '2010-03-15 07:59:21', '2010-03-15 07:59:21', '2016-06-13 02:43:07'),
(56, 1, 4, '永远的NetPioneer', '<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;转眼间大三也快结束了，大学的时光转眼即逝，高兴过、痛苦过、堕落过也奋斗过，本周考两千米的时 候，前一天晚上围着操场跑了五圈，之后便累得躺在草地上了，结果第二天跑了个8分34秒，这是大学2000m 最差的一次，记得大一第一次测两千米的时候当时我们那组我跑的是第一，最后以8分17秒完成了考试，然后 还有一次印象深刻的是大二上学期，当时因为跑得太急了，然后又许久不锻炼，跑完后就反胃，一直吐，结果 成绩为8分20多秒，这一次也是我们那组测试的第一名，2000M第一圈是比较好跑的，然后第二圈开始变得困 难了，到第二圈的时候我就感觉到体力跟不上了，有一种想放弃的冲动，但是却硬是坚持地跑完了，因为喜欢 坚持，喜欢挑战，所以永远不会放弃。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大学唯一一个参加到现在的社团就是网协了，从明天开始就要准备开始协会下届的选拔了，而我也该收拾 东西撤出办公室了，心里各种滋味。在协会担任主席的大半年时间中，经历了许许多多的事情，也让我学习到 了很多的知识，唯一遗憾的是没有带领协会走向又一个辉煌，还有就是没有好好指导好良乡那边的工作，对此 我一直感觉到很愧疚，希望良乡的童鞋们能够理解和原谅。同时也感觉到终于把一个重担给放了下来，瞬时亦 轻松不少。然后今晚在协会通宵，以后估计很难有机会来机房通宵了，居然楼管大爷还过来查房，着实让我郁 闷了一下。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;发现本来有好多东西要写的，想着想着就没有写出来了，此时无言胜有言，唯一希望是下一届能够把协会 办得越来越好，我永远的NetPioneer</p>\r\n<p>&nbsp;</p>', '<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;转眼间大三也快结束了，大学的时光转眼即逝，高兴过、痛苦过、堕落过也奋斗过，本周考两千米的时候，前一天晚上围着操场跑了五圈，之后便累得躺在草地上了，结果第二天跑了个8分34秒，这是大学2000m最差的一次，记得大一第一次测两千米的时候当时我们那组我跑的是第一，最后以8分17秒完成了考试，然后还有一次印象深刻的是大二上学期，当时因为跑得太急了，然后又许久不锻炼，跑完后就反胃，一直吐，结果成绩为8分20多秒，这一次也是我们那组测试的第一名，2000M第一圈是比较好跑的，然后第二圈开始变得困难了，到第二圈的时候我就感觉到体力跟不上了，有一种想放弃的冲动，但是却硬是坚持地跑完了，因为喜欢坚持，喜欢挑战，所以永远不会放弃。</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大学唯一一个参加到现在的社团就是网协了，从明天开</p>', 2875, '["Netpioneer"]', 19, 0, 1, '2010-05-14 19:35:12', '2010-05-14 19:35:12', '2010-05-14 19:35:12'),
(58, 1, 11, '那些我逝去的2010', '<p>新年的钟声已经敲响了</p>\r\n<p>一年又一年<br />\r\n时间总是过得这么快<br />\r\n转眼间大四了<br />\r\n还记得大一刚来时的稚嫩<br />\r\n大二时的堕落<br />\r\n大三是的迷茫<br />\r\n大四时的淡定</p>\r\n<p>一切如此之快<br />\r\n许多事情还来不及忘记<br />\r\n仿佛如昨天般<br />\r\n历历在目</p>\r\n<p>2010年人生轨迹竟然变化如此之快<br />\r\n从不想读研<br />\r\n到大三下学期开始立志考研<br />\r\n后来竟然无意参加了信息对抗竞赛<br />\r\n从竞赛刚开始准备时的茫然<br />\r\n然后全力准备<br />\r\n开始重新学习C++、VC<br />\r\n大一那些重新被遗忘的C<br />\r\n又重新被拾起<br />\r\n终于在5月份初选<br />\r\n在软件组四个队中脱颖而出<br />\r\n四选一我们队入选了<br />\r\n依稀地记得初选时的答辩<br />\r\n和得到结果后的激动心情<br />\r\n感谢一直支持我们队的高老师和罗老师<br />\r\n然后接下来的日子便开始了大三期末复习<br />\r\n直至考试结束<br />\r\n又重新投入到了竞赛项目中<br />\r\n后来又得到了郭TF学长的帮助<br />\r\n终于在程序中加入了更加核心的功能</p>\r\n<p>那些天<br />\r\n每天去440写代码<br />\r\n那台X41t就这样陪我度过了大半个暑假</p>\r\n<p>8月中旬，去西安<br />\r\n到西安的那天下午就抽签<br />\r\n结果我手气好抽了软件组第一组<br />\r\n那时感觉压力不小<br />\r\n毕竟第一组答辩一般成绩不会太高<br />\r\n但是还是顶住了<br />\r\n第二天去得很早<br />\r\n西电的答辩现场没有我想象中的好<br />\r\n答辩完后<br />\r\n轻松地开始玩了<br />\r\n兵马俑、骊山、回民街、大雁塔</p>\r\n<p>得之获一等将后心里异常激动<br />\r\n突然感觉那么些天的努力没有白费<br />\r\n也让我明白了付出才有回报</p>\r\n<p>&nbsp;</p>\r\n<p>回校之后便不久开学了<br />\r\n9月份保研统计<br />\r\n弄了很多天的手续、资料<br />\r\n终于保送了</p>\r\n<p>后来学习压力相对减少<br />\r\n找做项目的人也多了<br />\r\n吃饭FB的次数也多了<br />\r\n生活不乏忙碌<br />\r\n有时也觉得很累<br />\r\n神马事情都不想干<br />\r\n偶尔也想想人生<br />\r\n想想自己的理想</p>\r\n<p><br />\r\n昨天终于大学倒数第二门考试考完了<br />\r\n感觉很轻松<br />\r\n今天就是2010年的最后一天了<br />\r\n有许多的话想说<br />\r\n可是键盘敲不出我的悲伤<br />\r\n那些内心深处的东西谁又能懂</p>\r\n<p><br />\r\n2011新的一年新的希望<br />\r\n向2010年说声再见</p>', '<p>新年的钟声已经敲响了</p>\r\n<p>一年又一年<br />\r\n时间总是过得这么快<br />\r\n转眼间大四了<br />\r\n还记得大一刚来时的稚嫩<br />\r\n大二时的堕落<br />\r\n大三是的迷茫<br />\r\n大四时的淡定</p>\r\n<p>一切如此之快<br />\r\n许多事情还来不及忘记<br />\r\n仿佛如昨天般<br />\r\n历历在目</p>', 2412, '["年终"]', 0, 0, 1, '2010-12-31 15:58:55', '2010-12-31 15:58:55', '2010-12-31 15:58:55'),
(59, 1, 5, '我最喜欢的字体fixedsys', '<p>　　Fixedsys是一种固定宽度的Windows字体。它是Windows中最古老的字体，在Windows 1.0和2.0中就用作系统字体。在Windows 95，98，和Windows Me中Fixedsys被作为记事本Notepad的缺省字体。【以上为百度百科内容】<br />\n<br />\n&nbsp; &nbsp;&nbsp; &nbsp;其实它还是VC6.0中的默认字体，但是后来各种原因windows就不对其进行升级支持了，甚至在win7中，该字体是默认隐藏的，但是这并不妨碍于我对它的喜欢，HOHO……<br />\n<br />\n&nbsp; &nbsp;&nbsp;&nbsp;一般来说只要是涉及到开发方面的字体设置，我都会使用fixedsys，即使有些IDE对其默认不支持，我也会想尽办法让其支持，下面我列图片来说明<br />\n<br />\n1、首先来一张zendstudio的</p>\n<p><a id="ematt:17" href="/upload/old/201101/40b5e0422fba6e6e372f46fc916548de20110107120901.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201101/thum-40b5e0422fba6e6e372f46fc916548de20110107120901.png" /></a> </p>\n<p>2、Dreamweaver CS5的</p>\n<p><br />\n<a id="ematt:20" href="/upload/old/201101/ab3b2df7bea6559bd3681a23956fb8e320110107120946.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201101/thum-ab3b2df7bea6559bd3681a23956fb8e320110107120946.png" /></a> </p>\n<p>&nbsp;</p>\n<p>3、Secure CRT 本人强烈推荐的SSH连接软件，支持选项卡的打开多个连接，相当给力<br />\n&nbsp;</p>\n<p><a id="ematt:19" href="/upload/old/201101/1c17ba2857d9b4192c1893272a96af2c20110107120937.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201101/thum-1c17ba2857d9b4192c1893272a96af2c20110107120937.png" /></a> </p>\n<p>&nbsp;</p>\n<p>4、最后再来一个VS2010的<br />\n&nbsp;</p>\n<p><a id="ematt:18" href="/upload/old/201101/53f2425dcb2c6a31e42e268a1af0e0a520110107120919.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201101/thum-53f2425dcb2c6a31e42e268a1af0e0a520110107120919.png" /></a> </p>\n<p>&nbsp;</p>\n<p><br />\n&nbsp;</p>', '<p>　　Fixedsys是一种固定宽度的Windows字体。它是Windows中最古老的字体，在Windows 1.0和2.0中就用作系统字体。在Windows 95，98，和Windows Me中Fixedsys被作为记事本Notepad的缺省字体。【以上为百度百科内容】<br />\r\n<br />\r\n&nbsp; &nbsp;&nbsp; &nbsp;其实它还是VC6.0中的默认字体，但是后来各种原因windows就不对其进行升级支持了，甚至在win7中，该字体是默认隐藏的，但是这并不妨碍于我对它的喜欢，HOHO……<br />\r\n&nbsp;</p>', 3852, '["生活"]', 6, 4, 1, '2011-01-07 12:08:09', '2011-01-07 12:08:09', '2016-06-16 16:20:22'),
(64, 1, 5, '把悲伤留给自己', '<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 分手都两个多月了，时间过得真是太快了，本来不想写东西的，毛球球说写点东西失恋XX天纪念20111111呗，如是还是写点吧，总要留点东西给以后怀念的，思来想去，还是用第二人称写吧。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 最开始注意到你是你在论坛的帖子“整宿舍的人表示：快冻死了”，当时你的头像是龙珠里面的饺子，ID也叫饺子，那句“大家可来围观 未完结前砍楼咬死”让人觉得你这孩子头脑真有点简单。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 后来你在空间里面传照片了，你那两张近照我觉得很不错，如是设为了桌面，也加你的QQ开始聊天了，那时候你是有喜欢的人的，并且还在论坛上发过帖子、状态、日志，还有一篇被你删了的日志，我后来在数据库里面找到保存了下来，估计你到现在都不知道吧，呵呵。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我说“多一个关心你的人不好吗？”，你说“我做你女朋友吧”，我说“好，我做你男朋友”。于是我们就这样在一起了，那天刚好是1月11日，小光棍节。第二天我就迫不及待地去良乡见你了，我在图书馆等你，见到你的时候你带着一个帽子，把头发都包起来了，说起话来的时候还带着鼻音，然后我们就去吃早餐了，那天实在太冷了，点完早餐后我们就靠着那个暖气片，还冻得直打哆嗦，呵呵。吃完饭后，就开始逛北湖了，然后牵你的手、吻你。晚上去麦当劳聊天，你讲你去打工的事，特别是你说去公安局，然后背了一大堆身份证的事，让我觉得非常有意思。后来太晚了，我没有来得及赶校车回去，于是就和你在图书馆地下室待了一晚。之后我们就每天QQ聊天、QQ语音，你们断网了之后就是电话，有时居然会打电话到1点，偶尔也觉得烦，不过心里很充实、很快乐。</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 已经是凌晨6点22了，未完待续……</p>', '', 3, '["生活"]', 0, 0, 0, '2011-11-06 21:44:19', '2011-11-06 21:44:19', '2011-11-06 21:44:19'),
(65, 1, 5, '你好吗？琴伤', '惊叹号最让我有感触的就是这两首歌了<br />\r\n<br />\r\n不断地听你好吗<br />\r\n<br />\r\n我努力假装现在过得很好<br />\r\n现在的你看来已不需要我<br />\r\n<br />\r\n想知道你真的过得好吗？<br />\r\n没有我也许是种解脱<br />\r\n<br />\r\n陪着我的叫寂寞<br />\r\n陪你的是谁呢？<br />\r\n<br />\r\n呵呵， 有种陈奕迅《好久不见》的感觉<br />\r\n一个人的感觉其实很好<br />\r\n偶尔会想起那个人<br />\r\n会想想她现在还好吗<br />\r\n或许有些事情注定要成回忆<br />\r\n你好吗？<br />\r\n我只希望你好<br />\r\n<br />\r\n《琴伤》的曲子真的很好，听完后我感觉回到了到时听《夜曲》时的感动了<br />\r\n听着听着就湿了<br />\r\n或许期待的周董就应该这样的回归<br />\r\n<br />\r\n我喜欢那个一直弹着钢琴的主角<br />\r\n看着自己心爱的人<br />\r\n那一圈戒痕 在她指上<br />\r\n他是伤心的<br />\r\n可是不忍为难<br />\r\n问谁在等心爱的她靠岸<br />\r\n<br />\r\n船已入港<br />\r\n他就这样看着她<br />\r\n目送她<br />\r\n没有歇斯底里<br />\r\n没有疯狂地挣扎<br />\r\n她就是他的悲伤<br />\r\n<br />\r\n他还是只顾弹钢琴<br />\r\n他看见她含着泪化妆<br />\r\n她的不舍全写在脸上<br />\r\n但是<br />\r\n他没有询问<br />\r\n他没有挽留<br />\r\n因为他害怕<br />\r\n害怕 故事走不到一半 <br />\r\n她心里早就已经有了答案<br />\r\n他始终是第三人<br />\r\n他始终只能弹着钢琴<br />\r\n<br />\r\n琴伤整个曲子里面透露出淡淡的悲伤和无奈<br />\r\n或许这正是能够感动我的地方<br />\r\n不需要歇斯底里<br />\r\n只需要淡淡地悲伤<br />\r\n<br />\r\n<br />', '惊叹号最让我有感触的就是这两首歌了<br />\r\n<br />\r\n不断地听你好吗<br />\r\n<br />\r\n我努力假装现在过得很好<br />\r\n现在的你看来已不需要我<br />\r\n<br />\r\n想知道你真的过得好吗？<br />\r\n没有我也许是种解脱<br />\r\n<br />\r\n陪着我的叫寂寞<br />\r\n陪你的是谁呢？<br />\r\n<br />\r\n呵呵， 有种陈奕迅《好久不见》的感觉<br />\r\n一个人的感觉其实很好', 1922, '["生活"]', 0, 0, 1, '2011-11-11 19:07:33', '2011-11-11 19:07:33', '2011-11-11 19:07:33'),
(66, 1, 11, '2011流水账', '<p>2011流水账</p>\r\n<p><br />\r\n1月新年新希望，1月11号明明是小光棍，天气很冷，却在那天开始了一段感情。16号考研结束了，全班在海丽轩聚餐，那天我本来不是主角，但是却喝到了医院，哥们说250ml的52度白酒干了，我真干了，接下来醒来就到医院了，在病床的时候就感觉自己呼不上气来，那一天感觉自己捡回条小命了，另外一哥们还吐了不少在医院的床上，我居然一口没吐。</p>\r\n<p>2月基本待在家，新年鞭炮响起的时候，给她打了个电话，外面鞭炮声很大，基本上听不清楚。期间感冒去医院一次，在家待着一个假期什么都没有干。20几号的时候返校，猛地一看原来这是大学最后一个学期了，四年弹指间呀。</p>\r\n<p>3月导师开会讨论毕设大安排了，刚开始还挺有动力的，还经常去实验室，但更多时间待在新一，中旬后基本就开始颓废了，期间还接了网站的活。3月去良乡的次数基本上每周一次，又吃了一遍良乡的餐厅。</p>\r\n<p>4月继续整日无头无脑生活，做网站项目，挣外快，毕设基本没有动。4月下旬的时候班上组织毕业旅行，路线是北京-》大连-》蓬莱-》潍坊-》北京，环渤海湾之旅。第二次看海，在老虎滩公园的时候总感觉海水里面有油味。蓬莱的真是个好地方，空气特好，海水也蓝，真是人间仙境呀。在蓬莱海边的沙滩上，写下了我爱XXX，以为这就是爱情，可是一个浪过来沙滩还是原来的沙滩。</p>\r\n<p>5月毕设答辩已经近在眼前了，开始做毕设，同时还帮其他人做毕设的程序，期间去过一次玉渊潭，记得那天风很大，水都被吹到岸边了。被教着认各种各样的花草树木，却还是一个都不认得。5月末德育终期答辩，班级RP爆发，没有被抽中领导考察，在中心花园边聊天边玩游戏地进行答辩。</p>\r\n<p>6月初就开始答辩了，准备得也不是很充分，老师问了两个问题，都答上了。看到最后的成绩是优，终于松了口气，一年多的保研生涯画上完美句号。19号的时候全班回到曾经的开荒地——良乡，居然能在一堆照片中发现几张为数不多的合照。接下来几天频繁的饭局、酒，离别的意味也原来越浓。21号照毕业照，一群人在中心花园，各种恶搞、各种HAPPY，然后开毕业典礼，接着图书馆、校门口等地方留下了学士照。22号全班在聚柳林散伙饭，那天没敢放开喝，不过看到老班是喝多了，一顿狂哭，还有小乔居然也喝吐了。博哥、辉哥也喝了不少。晚上很多人就直接去K歌了，我早早地去休息了。25号清理宿舍，不得不佩服学校的效率，一天之间基本上就清理得差不多了，最后送辉哥上的士的时候，老班还是晚来了10分钟，不知道这一别何时能够再见。</p>\r\n<p>7月开始在机房待着，送她回家然后基本上一个人待机房，大部分时间感觉很寂寞。偶尔去外面转转也是吃饭什么的。开始喜欢上了山地，骑行了良乡一次、香山一次。下旬的时候回了一趟家。</p>\r\n<p>8月初在家待着，后来回京时在长沙玩了几天，去看了橘子洲的烟花，真的很震惊，然后爬了岳麓山，看到有人骑上岳麓山，有股想骑车的冲动。9号的时候参加ISCC分组对抗赛，认识了许多大牛，我们队居然在比赛中获得了冠军，不过后来发现奖品不是很给力。比赛后全体参赛人员去了趟居庸关，爬长城的时候感觉腿软。19号接她回校，20号最后一面。</p>\r\n<p>9月4号正式分手，不知道什么滋味。研究生也开学了，选导师的时候换了另外一个导师。开始接触新的同学，分的寝室不错很大。发现研究生上课比本科扯淡不少，老师管得也叫松，但是还是感觉研究生就不应该考试。下旬的是后开始准备学习ARM，从web开发到搞嵌入式了，感觉难度也不小。</p>\r\n<p>10月国庆期间别人都在玩，我在找各种arm的学习资料，调板子，终于开始有点入门的感觉了。5号的时候带着学弟们去爬了次香山，回来时屁股疼了好几天。下旬的时候参加一个创业比赛，信心满满地去，失望而归，也发现了移动互联网的飞速发展。</p>\r\n<p>11月光棍月，各种科目也开始结课了，12号考的矩阵，复习了一周多，感觉考试还算比较简单，及格应该是没有压力了。发现光棍节淘宝促销真是坑爹，下旬低调地过完了生日，好像知道的人很少呀，低调 低调。</p>\r\n<p>12月3号深秋歌会，本来想去看的，后来还是在NPLIVE看的直播，基本上每年都在直播现场，今年也看看直播吧。12号考试两门，上午考高等数字通信的时候很给力，下午的时候就直接悲剧了，老师说做最简单的题，还说别做一小时提前交卷，结果我信了。14号的时候买的WP7手机到手了，开始折腾手机了，17号成果显著，基本上掌握了越狱的方法，部署XAP也随心所欲了，居然发现了手机可以连电脑的远程桌面，而且还有SSH client，看来以后可以躺在床上管理服务器了，也算是不小的发现吧。</p>\r\n<p>写完的时候已经是18号20点了，2011年马上就要过完了，都说2012是世界末日，我倒要看个究竟，2012还是满心期待的，下学期好好实验室搞科研，越来越感觉到自己掌握的东西少了，这年代知识才能改变命运呀，好吧就写到这里了，希望明年的总结能够比这流水账给力点。</p>', '<p>2011流水账</p>', 2287, '["年终"]', 1, 0, 1, '2011-12-18 12:24:10', '2011-12-18 12:24:10', '2011-12-18 12:24:10');
INSERT INTO `post` (`id`, `user_id`, `category_id`, `title`, `content`, `excerpt`, `views`, `tags`, `comment_num`, `attachment_num`, `publish`, `edited_at`, `created_at`, `updated_at`) VALUES
(67, 1, 10, '关于LWIP协议栈连续多次tcp_write后失败的解决过程', '<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">好像好久不发日志了，最近比较闲，更新一篇关于</span><span lang="EN-US"><span style="font-family:Calibri;">lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">协议栈的文章。</span><span lang="EN-US"><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">前段时间一直在调试</span><span lang="EN-US"><span style="font-family:Calibri;">lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">协议栈的问题，在</span><span lang="EN-US"><span style="font-family:Calibri;">stm32F107</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">上实现一个</span><span lang="EN-US"><span style="font-family:Calibri;">C/S </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">架构的通信程序。项目初期的时候设计的是</span><span lang="EN-US"><span style="font-family:Calibri;">B/S</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">架构的控制，然后在使用过程中发现了些限制，因为芯片自身的</span><span lang="EN-US"><span style="font-family:Calibri;">RAM</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">有限，所以跑</span><span lang="EN-US"><span style="font-family:Calibri;">B/S</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的</span><span lang="EN-US"><span style="font-family:Calibri;">server</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">端略显压力，为了处理类似动态网页内容，开辟一个</span><span lang="EN-US"><span style="font-family:Calibri;">5K</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的缓冲区，然后一次</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">就可以将内容发送给浏览器了，当然网页内容也是比较简单，考虑到后续可能会有更多的数据处理，故决定开发一个</span><span lang="EN-US"><span style="font-family:Calibri;">C/S</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">架构的控制。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="mso-tab-count:1;"><span style="font-family:Calibri;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">上位机</span><span lang="EN-US"><span style="font-family:Calibri;">client</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">倒是没什么太多可说的，自己封装下基本的</span><span lang="EN-US"><span style="font-family:Calibri;">winsock</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">操作。考虑到用</span><span lang="EN-US"><span style="font-family:Calibri;">TCP</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">协议传输简单地封装了下数据封包和拆包的协议，然后</span><span lang="EN-US"><span style="font-family:Calibri;">MFC</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">作为图形界面。在</span><span lang="EN-US"><span style="font-family:Calibri;">stm32</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">端主要采用</span><span lang="EN-US"><span style="font-family:Calibri;">lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的</span><span lang="EN-US"><span style="font-family:Calibri;">RAW API</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，然后利用</span><span lang="EN-US"><span style="font-family:Calibri;">callback</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的方式处理接收上位机命令、数据后的处理，初始化服务器的代码如下：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>void Server_init(void)<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">{<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>struct tcp_pcb *pcb; <o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pcb = tcp_new(); // </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">动态创建一个</span><span lang="EN-US"><span style="font-family:Calibri;">pcb <o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>tcp_bind(pcb, IP_ADDR_ANY, 8082); <span style="mso-spacerun:yes;">&nbsp;</span>// </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">绑定端口</span><span lang="EN-US"><span style="font-family:Calibri;">8082<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>pcb = tcp_listen(pcb); // </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">开始监听</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>tcp_accept(pcb, Server_accept); // accept</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">成功时的回调函数</span><span lang="EN-US"><span style="font-family:Calibri;"> <span style="mso-tab-count:5;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">}<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">然后在</span><span lang="EN-US"><span style="font-family:Calibri;">Server_accept</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">中也主要是初始化一些回调函数，</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>static err_t Server_accept(void *arg, struct tcp_pcb *pcb, err_t err)<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">{<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>tcp_err(pcb, Server_conn_err); // </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">错误时的回调函数</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>tcp_recv(pcb, Server_recv); // </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">接收到数据后的回调函数</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>tcp_sent(pcb, Server_sent); // tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">数据成功发送后的回调函数</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>gRemoteIp = pcb-&gt;remote_ip; // </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">获取远程客户端的地址</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>return ERR_OK;<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">}<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">最重要的函数就是</span><span lang="EN-US"><span style="font-family:Calibri;">Server_recv()</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">了，在这个函数中，根据客户端不同的命令，然后处理相应的数据发送给客户端，但这是问题就暴露出来了。截取一段发送数据的简化代码：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">for(i = 0; i &lt; WMFlag.WM_Record_Num; ++i) {<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>SendCharBuff(pcb, WMTempData, strlen(WMTempData), PT_TEXT);<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">}<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">其中</span><span lang="EN-US"><span style="font-family:Calibri;">SendCharBuff</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">主要是调用</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">函数，这个当</span><span lang="EN-US"><span style="font-family:Calibri;">WM_Record_Num</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">这个数值很大时，客户端总是接收不全，后来经过反复地进行实验发现，然来是</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">这个函数在循环到</span><span lang="EN-US"><span style="font-family:Calibri;">12</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">次的时候会返回</span><span lang="EN-US"><span style="font-family:Calibri;">ERR_MEM</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的内存错误，这个问题让我百思不得其解，然后通过网上的一些资料，很多人说是</span><span lang="EN-US"><span style="font-family:Calibri;">lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">协议栈有</span><span lang="EN-US"><span style="font-family:Calibri;">BUG</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，然后我姑且相信了这个结论，但是有</span><span lang="EN-US"><span style="font-family:Calibri;">BUG</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">也得继续调呀。于是便想到了</span><span lang="EN-US"><span style="font-family:Calibri;">winsock</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">里面有个</span><span lang="EN-US"><span style="font-family:Calibri;">WSAGetLastError()</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">这个函数，但是</span><span lang="EN-US"><span style="font-family:Calibri;">lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">里面却没有，网上找了找说可以开启</span><span lang="EN-US"><span style="font-family:Calibri;">lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的调试功能，于是乎就开始设置</span><span lang="EN-US"><span style="font-family:Calibri;">lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的调试功能了。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">关于开启</span><span lang="EN-US"><span style="font-family:Calibri;">LWIP</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的调试功能主要的设置如下：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-indent:-18pt;margin:0cm 0cm 0pt 39pt;mso-list:l0 level1 lfo1;" class="MsoNormal"><span style="mso-fareast-font-family:Calibri;mso-bidi-font-family:Calibri;" lang="EN-US"><span style="mso-list:Ignore;"><span style="font-size:small;font-family:Calibri;">1、</span><span style="font:7pt ''Times New Roman'';">&nbsp; </span></span></span><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">在</span><span lang="EN-US"><span style="font-family:Calibri;">src/include/lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">目录中找到</span><span lang="EN-US"><span style="font-family:Calibri;">debug.h</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">这个文件，然后在里面添加如下代码</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">// Add By </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">风格独特</span><span lang="EN-US"><span style="font-family:Calibri;"> 2012-06-28<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">// </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">增加串口调试功能</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">// </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">声明外部的</span><span lang="EN-US"><span style="font-family:Calibri;">USART2_Printf</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">串口输出调试信息函数</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">extern void USART2_Printf(const char *format, ...); <o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">// </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">定义格式化内容的宏</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">// PS </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">通过调试这个宏发现了以前不知道的一个小知识，那就是字符串可以这样表示</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">// “aaaa” “bbb” == “aaaabbb”<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define U8_F "c"<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define S8_F "c"<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define X8_F "x"<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define U16_F "u"<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define S16_F "d"<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define X16_F "x"<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define U32_F "u"<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define S32_F "d"<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define X32_F "x"<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">// </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">设置调试的宏，注释这个宏可以关闭调试功能</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define LWIP_DEBUG<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define LWIP_PLATFORM_DIAG(x)<span style="mso-tab-count:1;"> </span>USART2_Printf x<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">// Add End<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p style="text-indent:-18pt;margin:0cm 0cm 0pt 39pt;mso-list:l0 level1 lfo1;" class="MsoNormal"><span style="mso-fareast-font-family:Calibri;mso-bidi-font-family:Calibri;" lang="EN-US"><span style="mso-list:Ignore;"><span style="font-size:small;font-family:Calibri;">2、</span><span style="font:7pt ''Times New Roman'';">&nbsp; </span></span></span><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">在</span><span lang="EN-US"><span style="font-family:Calibri;">src/include/lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">目录中找到</span><span lang="EN-US"><span style="font-family:Calibri;">opt.h</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">这个文件，然后找到如下代码</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#ifndef TCP_OUTPUT_DEBUG<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define TCP_OUTPUT_DEBUG<span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>LWIP_DBG_OFF<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#endif<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="mso-tab-count:1;"><span style="font-family:Calibri;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">其中将</span><span lang="EN-US"><span style="font-family:Calibri;">LWIP_DBG_OFF</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">改为</span><span lang="EN-US"><span style="font-family:Calibri;">LWIP_DBG_ON</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，即开启了</span><span lang="EN-US"><span style="font-family:Calibri;">TCP_OUT_DEBUG</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的调试，当然如果想开启其他的调试输出，就可以将相应的地方改为</span><span lang="EN-US"><span style="font-family:Calibri;">LWIP_DBG_ON</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">即可。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-indent:-18pt;margin:0cm 0cm 0pt 39pt;mso-list:l0 level1 lfo1;" class="MsoNormal"><span style="mso-fareast-font-family:Calibri;mso-bidi-font-family:Calibri;" lang="EN-US"><span style="mso-list:Ignore;"><span style="font-size:small;font-family:Calibri;">3、</span><span style="font:7pt ''Times New Roman'';">&nbsp; </span></span></span><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">实现</span><span lang="EN-US"><span style="font-family:Calibri;">USART2_Printf</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">这个函数，代码如下</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">void USART2_Printf(const char *format,...)<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">{<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>int iOutLen;<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>char buf[256];<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>va_list arg_ptr;<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>va_start(arg_ptr, format);<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>iOutLen = vsprintf(buf, format, arg_ptr);<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>va_end(arg_ptr);<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>USART_SendStr(buf, iOutLen);<o:p></o:p></span></span></span></p>\r\n<p style="margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">}<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">开启调试后得到如下的调试输出信息：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;"><span style="mso-tab-count:1;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>tcp_enqueue: 12 (after enqueued)<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">tcp_write(pcb=20009c1c, data=08003a24, len=6, apiflags=1)<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">tcp_enqueue(pcb=20009c1c, arg=08003a24, len=6, flags=0, apiflags=1)<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">tcp_enqueue: queuelen: 12<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">tcp_enqueue: too long queue 12 (max 12)<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">tcp_output_segment: 6848:6920<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">State: ESTABLISHED<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">可以看出在</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_enqueue</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">第</span><span lang="EN-US"><span style="font-family:Calibri;">12</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">次的时候输出了</span><span lang="EN-US"><span style="font-family:Calibri;">too long queue 12 (max 12)</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，超出最大的列队次数，于是在工程中搜索</span><span lang="EN-US"><span style="font-family:Calibri;">too long queue</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">这句话，在</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_out.c</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">文件中找到了如下代码：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">if ((queuelen &gt; TCP_SND_QUEUELEN) || (queuelen &gt; TCP_SNDQUEUELEN_OVERFLOW)) {<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">LWIP_DEBUGF(TCP_OUTPUT_DEBUG | 2, ("tcp_enqueue: queue too long %"U16_F" (%"U16_F")\\n", queuelen, TCP_SND_QUEUELEN));<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt 21pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">goto memerr;<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">}<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">然后发现</span><span lang="EN-US"><span style="font-family:Calibri;">TCP_SND_QUEUELEN</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的值为</span><span lang="EN-US"><span style="font-family:Calibri;">12</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，跟到</span><span lang="EN-US"><span style="font-family:Calibri;">TCP_SND_QUEUELEN</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的定义代码：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">#define TCP_SND_BUF<span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>(2*TCP_MSS)<span style="mso-spacerun:yes;">&nbsp; </span>// </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">发送缓冲区，为两个</span><span lang="EN-US"><span style="font-family:Calibri;">MSS</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的大小</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">// </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">此参数限制了</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的次数，系数默认为</span><span lang="EN-US"><span style="font-family:Calibri;">6</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，</span><span style="font-family:Calibri;"> </span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">改为</span><span lang="EN-US"><span style="font-family:Calibri;">3000<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">#define TCP_SND_QUEUELEN<span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>(3000 * TCP_SND_BUF)/TCP_MSS<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">于是将那个默认的系数由</span><span lang="EN-US"><span style="font-family:Calibri;">6</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">改为</span><span lang="EN-US"><span style="font-family:Calibri;">3000</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，再次测试时发现可以连续</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">超过</span><span lang="EN-US"><span style="font-family:Calibri;">12</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">次了，于是解决了</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的连续多次调用后失败的问题。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">最后补充一下</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">这个函数的最后一个参数的说明，该函数的声明如下</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><span style="font-size:small;"><span style="font-family:Calibri;">err_t tcp_write(struct tcp_pcb *pcb, void *dataptr, u16_t len, u8_t copy);<o:p></o:p></span></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">其中第四个参数是一个</span><span lang="EN-US"><span style="font-family:Calibri;">copy</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">参数，当为</span><span lang="EN-US"><span style="font-family:Calibri;">0</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">时为不拷贝数据，也就是在</span><span lang="EN-US"><span style="font-family:Calibri;">dataptr</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">所指的缓冲区里面发送数据，因为调用</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">成功后数据并不会立即发送，所以要确保</span><span lang="EN-US"><span style="font-family:Calibri;">dataptr</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">所指的缓冲区内容保持不变，如果调用</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">成功后，再改变</span><span lang="EN-US"><span style="font-family:Calibri;">dataptr</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">缓冲区可能就会和预期发送的数据不相符，当时我也碰到过这个问题，后来将最后的参数改为</span><span lang="EN-US"><span style="font-family:Calibri;">1</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，为</span><span lang="EN-US"><span style="font-family:Calibri;">1</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">时即拷贝缓冲区内容，当执行</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">时，会将</span><span lang="EN-US"><span style="font-family:Calibri;">dataptr</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">所指向的缓冲区内容先拷贝到发送的缓冲区中，这样的话执行</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">之后再改变</span><span lang="EN-US"><span style="font-family:Calibri;">dataptr</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">所指的内容是不影响数据的正确发送的。</span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal">&nbsp;</p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal">&nbsp;</p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span lang="EN-US"><o:p></o:p></span>&nbsp;</p>', '<span style="font-size:small;"><span style="font-family:宋体;font-size:12px;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;"> <p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">好像好久不发日志了，最近比较闲，更新一篇关于</span><span lang="EN-US"><span style="font-family:Calibri;">lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">协议栈的文章。</span><span lang="EN-US"><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></span></span></p>\r\n<p style="text-indent:21pt;margin:0cm 0cm 0pt;" class="MsoNormal"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">前段时间一直在调试</span><span lang="EN-US"><span style="font-family:Calibri;">lwip</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">协议栈的问题，在</span><span lang="EN-US"><span style="font-family:Calibri;">stm32F107</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">上实现一个</span><span lang="EN-US"><span style="font-family:Calibri;">C/S </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">架构的通信程序。项目初期的时候设计的是</span><span lang="EN-US"><span style="font-family:Calibri;">B/S</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">架构的控制，然后在使用过程中发现了些限制，因为芯片自身的</span><span lang="EN-US"><span style="font-family:Calibri;">RAM</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">有限，所以跑</span><span lang="EN-US"><span style="font-family:Calibri;">B/S</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的</span><span lang="EN-US"><span style="font-family:Calibri;">server</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">端略显压力，为了处理类似动态网页内容，开辟一个</span><span lang="EN-US"><span style="font-family:Calibri;">5K</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的缓冲区，然后一次</span><span lang="EN-US"><span style="font-family:Calibri;">tcp_write</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">就可以将内容发送给浏览器了，当然网页内容也是比较简单，考虑到后续可能会有更多的数据处理，故决定开发一个</span><span lang="EN-US"><span style="font-family:Calibri;">C/S</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">架构的控制。</span></span></p>\r\n</span></span>', 13224, '["嵌入式"]', 6, 0, 1, '2012-07-12 07:53:13', '2012-07-12 07:53:13', '2016-06-13 02:43:38'),
(71, 1, 5, '一个概率问题开始的扯蛋', '<p><span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;事先申明，本文纯属扯蛋，如有雷同，必有别人抄袭。</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;话说今天科研正酣，某球在某群里发了一个极具学术性的问题，由此引发了一系列的讨论和研究，最终问题答案基本得到了大家一致性认可，但本人觉得应该深入去挖掘点什么东西，于是就本篇的诞生。</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;首先某球问题的描述是这样的：有三个盒子，&nbsp;里面分别装着一个粉球和两个蓝球，要问选择哪个盒子里面是粉球，盒子编号1,2,3。选法如下</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;1、第一次先选1、2、3盒子的中的一个，选完之后，会排除掉一个没被选中的装蓝球的盒子</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;2、第二次在剩下的两个盒子中怎么选概率最大能选到粉球</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;当然这个题目明显不够刺激，于是我把盒子里面改为了，粉色盒子里面装的是1kw支票，蓝色盒子里面装的是一坨翔，如果选中了盒子里面的东西就归他了，这么一改俗是俗了点，但是能刺激看文章人的肾上腺激素分泌，当然如果是正在吃饭的人请自觉按Ctrl+W。然后我们来看故事怎么发展的。</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;首先来了一个挨踢民工，一看就是那种本科没有好好学过概率论的穷屌丝，挨踢民工上来就第一个选择了盒子1，虽然不懂为什么，但感觉很厉害的样子，于是现在把3盒子排除掉，剩下盒子1和2，这个时候挨踢民工心里捉摸着反正就是个2选1的游戏，于是他就用1/2的概率从两个中挑选了一个，这样他认为选中1kw支票的概率为1/2。</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;接着又来了一个数学系的高材生，高材生拿出一个笔记本电脑在上面敲着010101……，只见电脑屏幕上黑背景白字体翻滚着，然后不一会高材生就胸有成竹地开始选了，高材生第一个也是选择了盒子1，继续把3号盒子排除掉，第二次选择的时候高材生果断选择了盒子2，换了一次选择。高材生想着我第一次选择能选中1kw的概率为1/3，1kw肯定有2/3的概率在剩下的另外两个里面，然后其中的一个有翔的盒子排除掉了，也就是说剩下那一个有2/3的概率是1kw的盒子，于是他选择了盒子2，把选中的概率从1/2提升到了2/3。</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;故事到这个地方就应该开始一段分析了，首先挨踢民工就是挨踢民工，挨踢民工之所以认为他选择的概率是1/2是因为他把第一选择的结果和第二次选择的结果看成是两个独立的事件，也就是说他不懂第一次选择会对第二次选择这个决策产生影响，所以在他得到那1kw的概率是1/2。</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;高材生通过计算知道，第一次选择能够选中的概率是1/3，然后剩下的2/3的概率存在于没有选的里面，然后去掉一个有翔的盒子后，如果坚持第一次选择，那么概率还是1/3没有变化，如果换成盒子2，则概率被提升到2/3，所以高材生选择了盒子2.</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;最终高材生通过自己学习的知识，把得奖的概率从1/2提升到了2/3，由此验证了知识可以改变命运。当然最终谁能拿到这1kw当然是要看自己的运气了。所以也就是为什么别人小学毕业照样当老板，而有人博士毕业却帮别人搬砖。有可能高材生用他的2/3的概率选了一坨翔，而挨踢民工依照1/2的概率也选了一坨翔。由此可见知识改变命运只是从概率上提升了而已，但提升的概率毕竟不能为1。</span><br />\r\n<span style="font-family:SimSun;">&nbsp;&nbsp;&nbsp;&nbsp;这个故事看似结束了，如果这样就结束了显然达不到我的预期，估计很多人都已经把重心转移到数学概率上去了，看完后又会问谷歌、度娘什么的，然后提出各种质疑，各种分析。但我最后提出的一个重点是，放1kw在这个盒子里面的人，这个人才是最大的温拿，因为是他把这个1kw放在了盒子1里面的，他知晓这一切的规则，然后可以用1的概率去选中这个1kw的盒子，这不就是传说中的高富帅。虽说屌丝终有逆袭日，但终究抵不过一个拼爹的时代啊。</span></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>', '<span style="font-family:宋体;">事先申明，本文纯属扯蛋，如有雷同，必有别人抄袭。<br />\r\n<span style="font-family:SimSun;">话说今天科研正酣，某球在某群里发了一个极具学术性的问题，由此引发了一系列的讨论和研究，最终问题答案基本得到了大家一致性认可，但本人觉得应该深入去挖掘点什么东西，于是就本篇的诞生。</span></span><br />', 1302, '["生活"]', 0, 0, 0, '2012-12-17 11:25:32', '2012-12-17 11:25:32', '2012-12-17 11:25:32'),
(72, 1, 11, '2012年勉励过自己的句子', '<p>1、忍一时风平浪静，退一步海阔天空。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 学着大度，看淡<br />\r\n2、三人行必有我师。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 多向身边的人学习<br />\r\n3、闻道有先后，术业有专攻，如是而已。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 不要怕自己懂的少<br />\r\n4、狗急跳墙。<br />\r\n5、给别人一个台阶，就是给自己一条退路。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 和第四句结合着理解<br />\r\n6、隔行如隔山。<br />\r\n7、故不积跬步，无以至千里；不积小流，无以成江海。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 学习贵在坚持和积累<br />\r\n8、故不登高山，不知天之高也；不临深溪，不知地之厚也；不闻先王之遗言，不知学问之大也。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 多扩展自己的眼界，不要只看到眼前<br />\r\n9、厚积薄发。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 积累的多了，思路就开阔了，等到用时左右逢源<br />\r\n10、观今宜鉴古，无古不成今。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 所有的事情发展都是有历史因素的，不读读历史就看不懂当今发展局势<br />\r\n11、欲速则不达。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 不能只追求速度，花时间把基础打牢固才是根本</p>\r\n<p>&nbsp;</p>\r\n<p>花了半小时整理出来，在2012年的尾巴上发出来，这些句子是可以勉励自己一生的句子，希望能够越来越理解透彻。</p>', '', 1651, '["生活","年终"]', 0, 0, 1, '2012-12-31 15:17:24', '2012-12-31 15:17:24', '2016-06-16 15:35:42'),
(73, 1, 8, 'ODBC连接MYSQL一些笔记', '<p>一、ODBC连接mysql两种方法<br />\r\n首先要使用ODBC连接mysql先得安装mysql-connector-odbc。<br />\r\n&nbsp;1、手动设置ODBC数据源，<br />\r\n&nbsp;安装了mysql-connector-odbc后，在“控制面板-&gt;管理工具-&gt;数据源ODBC中的用户DSN中添加新的数据源，然后选择mysql驱动，配置好用户名、密码、数据库，测试连接成功后，该DSN即可以被程序调用，调用是可以采用下面方式：<br />\r\n&nbsp;CDatabase db;<br />\r\n&nbsp;db.Open(NULL,FALSE,FALSE,"ODBC;DSN=odbctest;UID=root;PWD=");<br />\r\n&nbsp;其中UID和PWD可以不填<br />\r\n&nbsp;<br />\r\n&nbsp;2、动态设置ODBC数据源<br />\r\n&nbsp;这种办法是指在程序执行时才添加数据源，SQLConfigDataSource是所用的方法，查msdn可以查到它的用法第一个参数一般设置成NULL就可以了，第二个参数我用的是ODBC_ADD_DSN，表示是新增数据源第三个参数是驱动的名称，第四个参数是连接字符串，多个参数用\\0分隔开，DSN就是数据源名称，UID是用户名，PWD是密码，SERVER是主机名，DATABASE是数据库名称，最后用两个\\0结束。<br />\r\n　　SQLConfigDataSource（NULL，ODBC_ADD_DSN，"MySQL ODBC 3.51 Driver"，"DSN=odbctest\\0 UID=root\\0 PWD=\\0 SERVER=localhost\\0 DATABASE=odbc\\0\\0"）；<br />\r\n　　只要在程序中加上这一行，当程序执行到它时，就会在数据源中加上你所设置的数据源，并且可以在控制面板 -&gt; 管理工具 -&gt; 数据源（ODBC）中查到。</p>\r\n<p>二、关于SQL SERVER2005安装<br />\r\n&nbsp;1、SQL Server 2005 Enterprise Edition不支持安装在XP上，XP上可以安装Developer Edition 、Express Edition和Standard Edition。<br />\r\n&nbsp;2、VS2008在安装时会附带SQL SERVER2005但是没有管理工具SQL Server Management，可以从微软官网下载到SQL Server Management Studio Express，安装后即可以管理SQL SERVER2005</p>\r\n<p>三、CRecordSet在不使用自己的SQL语句时，即在GetDefaultSQL产生的默认查询语言中将字段和表名采用"[]"来括起来，所以查询mysql时会产生异常，mysql字段和表名采用”`“反单引号的方式括起来。</p>\r\n<p>四、当CRecordSet执行open后，结果集中查询结果为空时，使用MoveFirst成员函数会产生异常</p>', '一、ODBC连接mysql两种方法<br />\r\n首先要使用ODBC连接mysql先得安装mysql-connector-odbc。<br />\r\n&nbsp;1、手动设置ODBC数据源，<br />\r\n&nbsp;安装了mysql-connector-odbc后，在“控制面板-&gt;管理工具-&gt;数据源ODBC中的用户DSN中添加新的数据源，然后选择mysql驱动，配置好用户名、密码、数据库，测试连接成功后，该DSN即可以被程序调用，调用是可以采用下面方式：', 1385, '["MySQL"]', 0, 0, 1, '2013-05-24 08:23:53', '2013-05-24 08:23:53', '2016-06-16 15:36:28');
INSERT INTO `post` (`id`, `user_id`, `category_id`, `title`, `content`, `excerpt`, `views`, `tags`, `comment_num`, `attachment_num`, `publish`, `edited_at`, `created_at`, `updated_at`) VALUES
(74, 1, 10, 'Hi3518c开发平台的搭建【未完善】', '<p>1、先要安装arm-hisiv100nptl-linux交叉编译工具，安装方法在osdrv\\toolchain\\arm-hisiv100nptl-linux目录里面有个cross.install安装文件，直接执行即可完成安装</p>\r\n<p>2、提示错误“mkimage command not found”，要将uboot的mkimage工具的路径导入到PATH中，tools的目录在osdrv\\uboot\\u-boot-2010.06\\tools，也可以自行安装uboot-mkimage，如ubuntu可使用apt-get install uboot-mkimage</p>\r\n<p>3、提示错误“/usr/bin/ld: cannot find -lc”，需要安装glibc-static，采用yum install glibc-static完成安装</p>\r\n<p>4、提示错误“cp: cannot stat `/home/hi3518/Hi3518_SDK_V1.0.3.0/osdrv/tools/pc_tools/lzma-4.32.7/src/lzma/lzma'': No such file or directory<br />\r\n”将osdrv\\tools\\pc_tools\\lzma-4.32.7\\src\\lzma目录中的lzma.1复制一份成lzma，再次编译全部通过</p>\r\n<p>5、启动开发板后uboot可以通过DHCP获取IP地址，linux默认情况下eth0处于关闭状态，使用ifconfig eth0 up开启eth0，然后使用ifconfig eth0 192.168.1.89来设置IP地址，通过route add default gw 192.168.1.1来设置网关，设置好后可以访问网络</p>', '', 1926, '["嵌入式"]', 1, 0, 1, '2013-07-11 12:18:33', '2013-07-11 12:18:33', '2016-06-16 14:48:19'),
(75, 1, 10, 'USB开发中的一些小结', '<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>开发中的一些小结</span></span><span lang="EN-US"><?xml:namespace prefix = "o" ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;"><span>&nbsp;</span></span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>1</span></span></span><span><span>、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>接口</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>首先来看看</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>接口的定义图，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>接口有四根线，分别是</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS,D</span></span></span><span><span>－</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>,D</span></span></span><span><span>＋</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>,GND</span></span></span><span><span>。其中</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>线是</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>HOST/HUB</span></span></span><span><span>向</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>设备供电的电源线。</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>HOST/HUB</span></span></span><span><span>每个端口通过</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>提供的电流最大为</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>500mA</span></span></span><span><span>，电压范围是</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>4.4V</span></span></span><span><span>－</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>5.5V</span></span></span><span><span>。其中：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>DM</span></span></span><span><span>是</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>Data Minus</span></span></span><span><span>（减号）的缩写，即为</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>D-</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>DP</span></span></span><span><span>是</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>Data Plus</span></span></span><span><span>（加号）的缩写，就为</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>D+</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;" align="center"><span lang="EN-US"><?xml:namespace prefix = "v" ns = "urn:schemas-microsoft-com:vml" /><v:shapetype id="_x0000_t75" coordsize="21600,21600" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f" o:spt="75" o:preferrelative="t"><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path gradientshapeok="t" o:extrusionok="f" o:connecttype="rect"></v:path><o:lock aspectratio="t" v:ext="edit"></o:lock></v:shapetype><a id="ematt:31" href="/upload/old/201308/7513bc9f0320d0aec71b1448f3f6fa1020130822091447.jpg" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/thum-7513bc9f0320d0aec71b1448f3f6fa1020130822091447.jpg" /></a><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>1.1</span></span></span><span><span>、常用的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>接口图</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;" align="center"><span lang="EN-US"><a id="ematt:25" href="/upload/old/201308/f7f0bbdb094d0b83d7561fc5ec2130d720130822091327.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/thum-f7f0bbdb094d0b83d7561fc5ec2130d720130822091327.png" /></a><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;" align="center"><span lang="EN-US"><a id="ematt:26" href="/upload/old/201308/b9910607436b9b11ca7760302fe1c15620130822091328.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/thum-b9910607436b9b11ca7760302fe1c15620130822091328.png" /></a><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;"><span>&nbsp;</span></span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>2</span></span></span><span><span>、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>供电</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>根据</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>规范，从电源方面来讲，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>设备分为自供电和总线供电两种设备类型，设备通过枚举过程的设备描述符声明自己的电源要求。自供电设备不使用</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>HSOT/HUB</span></span></span><span><span>的电源，而是自身有电源供应；总线供电即指设备电源来自</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>。如果是总线供电设备，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>规范按照设备工作时吸取的电流大小又规定了两种设备：</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>low pwer</span></span></span><span><span>和</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>high power</span></span></span><span><span>设备，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>low power</span></span></span><span><span>设备任何情况下不得吸取超过</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>100mA</span></span></span><span><span>的电流，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>high power</span></span></span><span><span>设备在正确配置之前不得吸取超过</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>100mA</span></span></span><span><span>的电流，如果已经配置，任何情况下不得吸取超过</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>500mA</span></span></span><span><span>的电流。如果设备进入</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>suspend</span></span></span><span><span>状态，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>low power</span></span></span><span><span>设备任何情况下不得吸取超过</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>500uA</span></span></span><span><span>电流，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>high power</span></span></span><span><span>设备在已经正确配置并且远程唤醒功能被主机使能的情况下不得吸取超过</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>2.5mA</span></span></span><span><span>的电流，否则不得超过</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>500uA</span></span></span><span><span>（</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>2008</span></span></span><span><span>年</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB-IF</span></span></span><span><span>对</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>suspend</span></span></span><span><span>电流规定进行了变更，原来的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>500uA</span></span></span><span><span>电流的规定过于严格，因此所有</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>设备</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>suspend</span></span></span><span><span>电流放宽到</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>2.5mA</span></span></span><span><span>。）。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>从规范的规定来看，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>对电源管理是有严格要求的，因此，有些</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>设备或者非</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>设备不管三七二十一就从</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>取电是违反</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>规范的。还有一种自供电和总线供电混合类型设备，其对</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>的使用规定和总线供电设备相同。许多主板</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>/HUB</span></span></span><span><span>并没有在</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>的供电上严格遵从</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>规范，通常是直接从电源模块送</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>+5V</span></span></span><span><span>到</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>上，有的甚至连</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>过流检测电路都没有。主板的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>供电能力还和主机使用的开关电源有很大关系，一些劣质电源向</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>提供的电流根本就达不到</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>500mA</span></span></span><span><span>或者是大电流下</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>电压降的很厉害导致设备不能正常工作；而没有</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>VBUS</span></span></span><span><span>过流检测的主板在</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>外设故障情况下有导致主板烧毁的危险。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;"><span>&nbsp;</span></span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>3</span></span></span><span><span>、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>主机（</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>host</span></span></span><span><span>）和设备（</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>device</span></span></span><span><span>）</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>usb</span></span></span><span><span>有主机（</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>host</span></span></span><span><span>）和设备（</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>device</span></span></span><span><span>）之分。</span></span><span style="font-family:Calibri;"><span> </span><span lang="EN-US"><span>usb </span></span></span><span><span>信号是差分信号，信号线为</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>D+, D-</span></span></span><span><span>。</span></span><span style="font-family:Calibri;"><span> </span></span><span><span>在</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>usb host </span></span></span><span><span>端，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span> D+</span></span></span><span><span>，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>D- </span></span></span><span><span>各接一个</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>15kohm </span></span></span><span><span>的下拉电阻，</span></span><span style="font-family:Calibri;"><span> </span></span><span><span>而在</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>usb device</span></span></span><span><span>端，这时就有高速低速设备的区别了。</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>usb1.0, 1.1,2.0</span></span></span><span><span>协议中都有定义高低速设备以满足不同情况的需求，这些在硬件上的区别就是：高速设备：</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>d+ </span></span></span><span><span>接一个</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>1.5kohm</span></span></span><span><span>的上拉电阻，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>d-</span></span></span><span><span>不接；低速设备则相反。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;" align="center"><span lang="EN-US"><a id="ematt:29" href="/upload/old/201308/c8c3affe6ff22af5c702e3108e515f1b20130822091329.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/thum-c8c3affe6ff22af5c702e3108e515f1b20130822091329.png" /></a><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>这样当</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>usb device </span></span></span><span><span>插入到</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>host</span></span></span><span><span>中时，如果是高速设备，</span></span><span style="font-family:Calibri;"><span> </span></span><span><span>则</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>d+</span></span></span><span><span>被拉高，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>d-</span></span></span><span><span>不变；低速设备则与之相反。这个上拉过程需要大概</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>2.5us</span></span></span><span><span>的时间，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>host</span></span></span><span><span>这这个时间内便检测到了该信号，即可判断有</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>device plug in</span></span></span><span><span>，和该</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>device</span></span></span><span><span>的类型，然后开始通讯，枚举等。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>4</span></span></span><span><span>、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB-OTG</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB OTG</span></span></span><span><span>是</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB On-The-Go</span></span></span><span><span>的缩写，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB OTG</span></span></span><span><span>标准在完全兼容</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB2.0</span></span></span><span><span>标准的基础上，增添了电源管理（节省功耗）功能，它允许设备既可作为主机，也可作为外设操作（两用</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>OTG</span></span></span><span><span>）。</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>OTG</span></span></span><span><span>两用设备完全符合</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB2.0</span></span></span><span><span>标准，并可提供一定的主机检测能力，支持主机通令协议（</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>HNP</span></span></span><span><span>）和对话请求协议（</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>SRP</span></span></span><span><span>）。在</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>OTG</span></span></span><span><span>中，初始主机设备称为</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>A</span></span></span><span><span>设备，外设称为</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>B</span></span></span><span><span>设备。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>两用设备使用</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>mini-AB</span></span></span><span><span>插座，从而使</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>mini-A</span></span></span><span><span>插头、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>mini-B</span></span></span><span><span>插头和</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>mini-AB</span></span></span><span><span>插座增添了第五个引脚（</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>ID</span></span></span><span><span>），以用于识别不同的电缆端点。系统控制器会判断</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>ID</span></span></span><span><span>脚的电平判断是什么样的设备插入，如果是高电平，则是</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>B</span></span></span><span><span>接头插入，此时系统就做主模式</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>(master mode)</span></span></span><span><span>如果</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>ID</span></span></span><span><span>为低，则是</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>A</span></span></span><span><span>接口插入，然后系统就会使用</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>HNP</span></span></span><span><span>对话协议来决定哪个做</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>Master</span></span></span><span><span>，哪个做</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>Slave</span></span></span><span><span>。如果你的系统仅仅是用做</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>Slave</span></span></span><span><span>，那么就使用</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>B</span></span></span><span><span>接口。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>5</span></span></span><span><span>、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>信号传输</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>usb </span></span></span><span><span>信号是差分信号，信号线为</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>D+, D-</span></span></span><span><span>。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="text-align:center;margin:0cm 0cm 0pt;" align="center"><span lang="EN-US"><a id="ematt:32" href="/upload/old/201308/1d9c8071cbfae72ca1e7071e262456ac20130822091447.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/1d9c8071cbfae72ca1e7071e262456ac20130822091447.png" /></a><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span><span>差分信号：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>1</span></span></span><span><span>：</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span> D+ &gt; VOH (2.8V) </span></span></span><span><span>、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>D-&lt; VOL(0.3V)</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>0</span></span></span><span><span>：</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>D-&gt; VOH </span></span></span><span><span>、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span> D+ &lt; VOL</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>J</span></span></span><span><span>状态：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>低速时：</span></span><span style="font-family:Calibri;"><span> </span></span><span><span>差分信号的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>0</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>全速时：</span></span><span style="font-family:Calibri;"><span> </span></span><span><span>差分信号的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>1</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>K</span></span></span><span><span>状态：</span></span><span style="font-family:Calibri;"><span> </span><span lang="EN-US"><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>低速时：</span></span><span style="font-family:Calibri;"><span> </span></span><span><span>差分信号的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>1</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>全速时：</span></span><span style="font-family:Calibri;"><span> </span></span><span><span>差分信号的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>0</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>SE0 (Single-ended0)</span></span></span><span><span>：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span lang="EN-US"><span><span style="font-family:Calibri;"><span>D+ and D-&lt; VOL</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>SE1 (Single-ended1)</span></span></span><span><span>：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span lang="EN-US"><span><span style="font-family:Calibri;"><span>D+ and D-&gt; VSE1(0.8V)</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span><span>复位</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>(Reset)</span></span></span><span><span>：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span lang="EN-US"><span><span style="font-family:Calibri;"><span>D+ and D-&lt; VOL for &gt;= 10ms</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span><span>恢复</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>(Resume)</span></span></span><span><span>：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>K </span></span></span><span><span>状态</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>SOP (Start of Packet)</span></span></span><span><span>：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>数据线从</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>IDLE</span></span></span><span><span>状态切换到</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>K</span></span></span><span><span>状态</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>EOP (End of Packet )</span></span></span><span><span>：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>持续</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>2</span></span></span><span><span>位时间的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>SE0</span></span></span><span><span>信号，后跟随</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>1</span></span></span><span><span>位时间的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>J</span></span></span><span><span>状态。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>SYNC</span></span></span><span><span>：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>3</span></span></span><span><span>个重复的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>KJ</span></span></span><span><span>状态切换，后跟随</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>2</span></span></span><span><span>位时间的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>K</span></span></span><span><span>状态，共持续</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>8</span></span></span><span><span>位时间。</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>(</span></span></span><span><span>低速</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>/</span></span></span><span><span>全速设备</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>)</span><o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;" align="center"><span lang="EN-US" style="mso-no-proof:yes;"><a id="ematt:33" href="/upload/old/201308/f4bf79c7393acf4837f82ec11d319b5e20130822091447.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/thum-f4bf79c7393acf4837f82ec11d319b5e20130822091447.png" /></a><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>5.1</span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>、数据的编码</span></span><span lang="EN-US" style="mso-no-proof:yes;"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>在包传送时，</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB </span></span></span><span><span>使用一种</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>NRZI(None Return Zero Invert</span></span></span><span><span>，即反向不归零</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>)</span></span></span><span><span>编码方案。在该编码方案中，“</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>1</span></span></span><span><span>”表示电平不变，“</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>0</span></span></span><span><span>”表示电平改变。图中列出了一个数据流及其它的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>NRZI </span></span></span><span><span>编码，在该图的第二个波形图中，一开始的高电平表示数据线上的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>J </span></span></span><span><span>态，后面就</span></span></span><span><span><span>是</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>NRZI </span></span></span><span><span>编码。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<span lang="EN-US" style="mso-no-proof:yes;"> <p align="center"><a id="ematt:34" href="/upload/old/201308/5889ad1ff364b352b9a33d7d5ee6e49e20130822091447.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/thum-5889ad1ff364b352b9a33d7d5ee6e49e20130822091447.png" /></a></p>\r\n<o:p></o:p></span> <p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>为了确集信号发送的准确性，当在</span></span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>USB </span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>上发送一个包时，传送设备就要进行位插入操作。所谓位插入操作是指在数据被编码前，每</span></span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>6</span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>个连续的</span></span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>1</span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>信号之后都会插入</span></span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>1</span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>个</span></span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>0</span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>信号，从而强迫</span></span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>NRZI </span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>码发生变化以免丢失同步。</span></span><span lang="EN-US" style="mso-no-proof:yes;"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>6</span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>、</span></span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>USB</span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>的</span></span><span lang="EN-US" style="mso-no-proof:yes;"><span style="font-family:Calibri;"><span>4</span></span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;mso-no-proof:yes;"><span>中传输方式</span></span><span lang="EN-US" style="mso-no-proof:yes;"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>协议定义了四种传输类型：</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>控制传输</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>(Control Transfers)</span></span></span><span><span>：突发，非周期性</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>, </span></span></span><span><span>由主机发起，用于命令和状态的传输。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>同步传输</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>(Isochronous Transfers)</span></span></span><span><span>：周期性，持续性的传输，用于传输与时效相关的信息，并且在数据中保存时间戳的信息。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>中断传输</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>(Interrupt Transfers)</span></span></span><span><span>：周期性，低频率，允许有限延迟的通信。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;"><span><span><span>大容量数据传输</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>(Bulk Transfers)</span></span></span><span><span>：非周期性，大容量突发数据的通信，数据可以占用任意带宽，并容忍延迟。</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;"><span>&nbsp;</span></span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>7</span></span></span><span><span>、实际中的一些电路图</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>7.1</span></span></span><span><span>、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>STM32F107</span></span></span><span><span>开发板的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB-OTG</span></span></span><span><span>接口原理图</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;" align="center"><span lang="EN-US"><a id="ematt:30" href="/upload/old/201308/f632e775aba5c72e0f5b91d950e3532720130822091329.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/thum-f632e775aba5c72e0f5b91d950e3532720130822091329.png" /></a><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>7.2</span></span></span><span><span>、项目中</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>STM32</span></span></span><span><span>实际的</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB-OTG</span></span></span><span><span>（主要作</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>HOST</span></span></span><span><span>用）原理图，电源部分采用直接</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>5V</span></span></span><span><span>供电</span></span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;" align="center"><span lang="EN-US"><a id="ematt:28" href="/upload/old/201308/e16a7569e4a82f0ba9b64e0a121a3a4620130822091328.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/thum-e16a7569e4a82f0ba9b64e0a121a3a4620130822091328.png" /></a><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span><span lang="EN-US"><span style="font-family:Calibri;"><span>7.3</span></span></span><span><span>、</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>Hi3518</span></span></span><span><span>官方原理图中</span></span><span lang="EN-US"><span style="font-family:Calibri;"><span>USB</span></span></span><span><span>接法</span></span></span><span lang="EN-US"><o:p></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;" align="center"><span lang="EN-US"><a id="ematt:27" href="/upload/old/201308/8e9c4e3a7e1f473cee1e1c0c3209bb8f20130822091328.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201308/thum-8e9c4e3a7e1f473cee1e1c0c3209bb8f20130822091328.png" /></a><o:p></o:p></span></p>', '<p>USB开发中的一些小结</p>\r\n<p>1、USB接口<br />\r\n1.1、常用的USB接口图<br />\r\n2、USB供电<br />\r\n3、USB主机（host）和设备（device）<br />\r\n4、USB-OTG<br />\r\n5、USB信号传输<br />\r\n5.1、数据的编码<br />\r\n6、USB的4中传输方式<br />\r\n7、实际中的一些电路图<br />\r\n7.1、STM32F107开发板的USB-OTG接口原理图<br />\r\n7.2、项目中STM32实际的USB-OTG（主要作HOST用）原理图<br />\r\n7.3、Hi3518官方原理图中USB接法</p>', 7864, '["嵌入式"]', 0, 10, 1, '2013-08-22 08:30:43', '2013-08-22 08:30:43', '2013-08-22 08:30:43');
INSERT INTO `post` (`id`, `user_id`, `category_id`, `title`, `content`, `excerpt`, `views`, `tags`, `comment_num`, `attachment_num`, `publish`, `edited_at`, `created_at`, `updated_at`) VALUES
(76, 1, 3, 'CentOS 6.3安装Gitlab服务', '<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><strong><span lang="EN-US" style="mso-fareast-font-family:Calibri;mso-bidi-font-family:Calibri;"><span style="mso-list:Ignore;"><span style="font-size:small;font-family:Calibri;"><span style="font-size:18px;">1.</span></span><SPAN style="FONT-SIZE: 18px; FONT-VARIANT: normal; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: normal" Roman?;? New Times>&nbsp;&nbsp;&nbsp;</span></span></span><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:18px;">Gitlab</span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装前</span><span lang="EN-US"><?xml:namespace prefix = "o" ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></span></span></strong></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">是一个利用</span><span lang="EN-US"><span style="font-family:Calibri;"> Ruby on Rails </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">开发的开源应用程序，实现一个自托管的</span><span lang="EN-US"><span style="font-family:Calibri;">Git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">项目仓库，可通过</span><span lang="EN-US"><span style="font-family:Calibri;">Web</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">界面进行访问公开的或者私人项目。</span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">它拥有与</span><span lang="EN-US"><span style="font-family:Calibri;">Github</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序</span><span lang="EN-US"><span style="font-family:Calibri;">(Wall)</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。</span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">较老版本的</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">要求服务器端采用</span><span lang="EN-US"><span style="font-family:Calibri;">Gitolite</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">搭建，</span><span lang="EN-US"><span style="font-family:Calibri;">5.0</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">版本以后对于</span><span lang="EN-US"><span style="font-family:Calibri;">ssh</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">服务，</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">不再使用</span><span lang="EN-US"><span style="font-family:Calibri;">Gitolite</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，采用自己开发的</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab-shell</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">来实现。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:16px;font-family:Calibri;">1.1 </span></span><span style="font-size:16px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">需要安装的软件</span><span lang="EN-US"><o:p></o:p></span></strong></span></p>\r\n<ul>\r\n<li>\r\n<div class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">（基本的</span><span lang="EN-US"><span style="font-family:Calibri;">Git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">环境）</span><span lang="EN-US"><o:p></o:p></span></span></div>\r\n</li>\r\n<li>\r\n<div class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Nginx</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">（</span><span lang="EN-US"><span style="font-family:Calibri;">web</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">服务器）</span><span lang="EN-US"><o:p></o:p></span></span></div>\r\n</li>\r\n<li>\r\n<div class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Mysql</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">（数据库）</span><span lang="EN-US"><o:p></o:p></span></span></div>\r\n</li>\r\n<li>\r\n<div class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Ruby</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">（</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">运行环境）</span><span lang="EN-US"><o:p></o:p></span></span></div>\r\n</li>\r\n<li>\r\n<div class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Gitlab shell</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">（</span><span lang="EN-US"><span style="font-family:Calibri;">git ssh</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">方式的版本管理软件）</span><span lang="EN-US"><o:p></o:p></span></span></div>\r\n</li>\r\n<li>\r\n<div class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">（</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">程序）</span><span lang="EN-US"><o:p></o:p></span></span></div>\r\n</li>\r\n<li>\r\n<div class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Redis</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">（</span><span lang="EN-US"><span style="font-family:Calibri;">key-value</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">内存缓存）</span><span lang="EN-US"><o:p></o:p></span></span></div>\r\n</li>\r\n</ul>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">2. </span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装</span><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">EPEL</span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">扩展源</span><span lang="EN-US"><o:p></o:p></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">因</span><span lang="EN-US"><span style="font-family:Calibri;">CentOS</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">自带的源软件包不全，</span><span lang="EN-US"><span style="font-family:Calibri;">EPEL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">是由</span><span lang="EN-US"><span style="font-family:Calibri;">Fedora</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">社区打造，为</span><span lang="EN-US"><span style="font-family:Calibri;">RHEL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">及衍生发行版如</span><span lang="EN-US"><span style="font-family:Calibri;"> CentOS</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">、</span><span lang="EN-US"><span style="font-family:Calibri;">Scientific Linux </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">等提供高质量软件包的项目。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">首先下载</span><span lang="EN-US"><span style="font-family:Calibri;">EPEL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">源的</span><span lang="EN-US"><span style="font-family:Calibri;">GPG key</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，然后安装</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">wget -O /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6 https://www.fedoraproject.org/static/0608B895.txt<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">验证</span><span lang="EN-US"><span style="font-family:Calibri;">KEY</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">是否安装成功可以采用如下命令</span><span lang="EN-US"><span style="font-family:Calibri;">:<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">rpm -qa gpg*<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">gpg-pubkey-0608b895-4bd22942<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">最后安装</span><span lang="EN-US"><span style="font-family:Calibri;">epel-release-6-8.noarch</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">软件包，安装好后就可以</span><span lang="EN-US"><span style="font-family:Calibri;">yum</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">命令安装</span><span lang="EN-US"><span style="font-family:Calibri;">EPEL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的扩展源里面的软件包了。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">rpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">3.<span style="font-size:18px;mso-tab-count:1;"> </span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装依赖的工具包</span><span lang="EN-US"><o:p></o:p></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">依赖的开发包和工具包</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">yum -y update<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">yum -y groupinstall ''Development Tools''<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">yum -y install readline readline-devel ncurses-devel gdbm-devel glibc-devel tcl-devel openssl-devel curl-devel expat-devel db4-devel byacc sqlite-devel gcc-c++ libyaml libyaml-devel libffi libffi-devel libxml2 libxml2-devel libxslt libxslt-devel libicu libicu-devel crontabs logwatch logrotate perl-Time-HiRes postfix<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">4. </span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装</span><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">GIT<o:p></o:p></span></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">yum install git<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">5.<span style="font-size:18px;mso-tab-count:1;"> </span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装和配置</span><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">Redis<o:p></o:p></span></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装</span><span lang="EN-US"><span style="font-family:Calibri;">Redis<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">yum install redis<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">配置确保</span><span lang="EN-US"><span style="font-family:Calibri;">Redis</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">开启自动运行</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">chkconfig redis on<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">service redis start<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">6.<span style="font-size:18px;mso-tab-count:1;"> </span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装</span><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">Ruby<o:p></o:p></span></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Gitlab6.7</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">仅支持</span><span lang="EN-US"><span style="font-family:Calibri;">Ruby2.0.x</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">版本，故如果存在老版本</span><span lang="EN-US"><span style="font-family:Calibri;">Ruby</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">需要卸载，因</span><span lang="EN-US"><span style="font-family:Calibri;">yum install ruby</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的版本较低，故需要采用源码编译安装的方式</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">从</span><span lang="EN-US"><span style="font-family:Calibri;">ftp</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">下载</span><span lang="EN-US"><span style="font-family:Calibri;">ruby</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">源码安装</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">mkdir /tmp/ruby &amp;&amp; cd /tmp/ruby<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">curl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p451.tar.gz | tar xz<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">cd ruby-2.0.0-p451<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">./configure --disable-install-rdoc<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">make<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">make prefix=/usr/local install<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装</span><span lang="EN-US"><span style="font-family:Calibri;">Bundler Gem:<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">gem install bundler --no-ri --no-rdoc<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">查看</span><span lang="EN-US"><span style="font-family:Calibri;">Ruby</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的路径，以及</span><span lang="EN-US"><span style="font-family:Calibri;">Ruby</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的版本</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">which ruby<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"># /usr/local/bin/ruby<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">ruby -v<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"># ruby 2.0.0p451 (2014-02-24 revision 45167) [x86_64-linux]<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">7.<span style="font-size:18px;mso-tab-count:1;"> </span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">添加</span><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">Gitlab</span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的用户</span><span lang="EN-US"><o:p></o:p></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">为</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">创建一个系统用户：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">adduser --system --shell /sbin/nologin --comment ''Gitlab'' --create-home --home-dir /home/git/ git<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">需要将</span><span lang="EN-US"><span style="font-family:Calibri;">/usr/local/bin</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">添加至</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">用户的</span><span lang="EN-US"><span style="font-family:Calibri;">PATH</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">中，运行</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">visodu<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">查找到</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"># Defaults<span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp; </span>secure_path = /sbin:/bin:/usr/sbin:/usr/bin<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">修改为</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"># Defaults<span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp; </span>secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">8.<span style="font-size:18px;mso-tab-count:1;"> </span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装</span><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">Gitlab shell<o:p></o:p></span></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Gitlab shell</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">是一个为</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">提供</span><span lang="EN-US"><span style="font-family:Calibri;">SSH</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">仓库管理方式的软件</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">进入</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">用户目录</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">cd /home/git<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">从</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">上</span><span lang="EN-US"><span style="font-family:Calibri;">clone</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">软件包</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H git clone https://gitlab.com/gitlab-org/gitlab-shell.git -b v1.9.1<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">cd gitlab-shell<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">将配置文件改名</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H cp config.yml.example config.yml<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">编辑配置文件修改</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab_url</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">为</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab URL<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">如果要使用自己的证书的话，编辑</span><span lang="EN-US"><span style="font-family:Calibri;">self_signed_cert</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">为</span><span lang="EN-US"><span style="font-family:Calibri;">true <o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H vi config.yml<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">最后安装</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H /usr/local/bin/ruby ./bin/install<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">9.<span style="font-size:18px;mso-tab-count:1;"> </span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装和配置</span><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">MySQL<o:p></o:p></span></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">MySQL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">在服务器安装不再细述，主要讲配置，在</span><span lang="EN-US"><span style="font-family:Calibri;">MySQL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">中添加一个</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">专用账号提高安全性，然后创建</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">用的数据库</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">登录</span><span lang="EN-US"><span style="font-family:Calibri;">MySQL<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">mysql -u root -p<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">为</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">创建用户</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，并且记得将</span><span lang="EN-US"><span style="font-family:Calibri;">password</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">改为实际密码</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">CREATE USER ''git''@''localhost'' IDENTIFIED BY ''password'';<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">为</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">创建数据库</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">CREATE DATABASE IF NOT EXISTS `gitlabhq_production` DEFAULT CHARACTER SET `utf8` COLLATE `utf8_unicode_ci`;<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">给</span><span lang="EN-US"><span style="font-family:Calibri;">MySQL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">用户分配权限</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">GRANT SELECT, LOCK TABLES, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER ON `gitlabhq_production`.* TO ''git''@''localhost'';<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">完成上述步骤后，可以测试</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">用户能否访问数据库：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">mysql -u git -p -D gitlabhq_production<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">输入设置的密码，完成登录测试</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">10.<span style="font-size:18px;mso-tab-count:1;"> </span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装配置</span><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">Gitlab<o:p></o:p></span></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">进入</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">用户目录</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">cd /home/git<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">从</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">上</span><span lang="EN-US"><span style="font-family:Calibri;">clone</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">一份最新的</span><span lang="EN-US"><span style="font-family:Calibri;">6.7</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">版本分支</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H git clone https://gitlab.com/gitlab-org/gitlab-ce.git -b 6-7-stable gitlab<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">进入</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">目录</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">cd /home/git/gitlab<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">拷贝一份配置文件</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H cp config/gitlab.yml.example config/gitlab.yml<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">修改配置文件，如果是源码安装</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，记得修改</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的路径为</span><span lang="EN-US"><span style="font-family:Calibri;">/usr/local/bin/git<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">vi config/gitlab.yml<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">确保</span><span lang="EN-US"><span style="font-family:Calibri;">log</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">和</span><span lang="EN-US"><span style="font-family:Calibri;">tmp</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">目录</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">用户可写</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo chmod -R u+rwX<span style="mso-spacerun:yes;">&nbsp; </span>log/<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo chmod -R u+rwX<span style="mso-spacerun:yes;">&nbsp; </span>tmp/<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"># Create directory for satellites<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H mkdir /home/git/gitlab-satellites<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">创建目录为</span><span lang="EN-US"><span style="font-family:Calibri;">sockets/pids</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，确保可写入</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H mkdir tmp/pids/<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H mkdir tmp/sockets/<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo chmod -R u+rwX<span style="mso-spacerun:yes;">&nbsp; </span>tmp/pids/<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo chmod -R u+rwX<span style="mso-spacerun:yes;">&nbsp; </span>tmp/sockets/<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">创建</span><span lang="EN-US"><span style="font-family:Calibri;">public/uploads</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">目录，</span><span lang="EN-US"><span style="font-family:Calibri;">otherwise backup will fail<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H mkdir public/uploads<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo chmod -R u+rwX<span style="mso-spacerun:yes;">&nbsp; </span>public/uploads<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">拷贝</span><span lang="EN-US"><span style="font-family:Calibri;">Unicorn</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">配置文件</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H cp config/unicorn.rb.example config/unicorn.rb<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"># Enable cluster mode if you expect to have a high load instance<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"># Ex. change amount of workers to 3 for 2GB RAM server<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">vi config/unicorn.rb<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">拷贝</span><span lang="EN-US"><span style="font-family:Calibri;">Rack attack</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">配置文件</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H cp config/initializers/rack_attack.rb.example config/initializers/rack_attack.rb<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">配置全局的</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">用户信息</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">配置</span><span lang="EN-US"><span style="font-family:Calibri;">uer.email</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，使其与</span><span lang="EN-US"><span style="font-family:Calibri;">config/gitlab.yml</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">中一致</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H git config --global user.name "GitLab"<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H git config --global user.email "gitlab@localhost"<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H git config --global core.autocrlf input<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">配置</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的数据库连接</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"># For MySQL<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H cp config/database.yml{.mysql,}<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">确保</span><span lang="EN-US"><span style="font-family:Calibri;">config/database.yml</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">仅</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">用户可读</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H chmod o-rwx config/database.yml<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装</span><span lang="EN-US"><span style="font-family:Calibri;">Gems<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">对于</span><span lang="EN-US"><span style="font-family:Calibri;">MySQL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">数据库</span><span lang="EN-US"><span style="font-family:Calibri;"> (note, the option says "without ... postgres")<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H /usr/local/bin/bundle install --deployment --without development test postgres aws<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">初始化数据库和激活高级特性</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H bundle exec rake gitlab:setup RAILS_ENV=production<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">输入</span><span lang="EN-US"><span style="font-family:Calibri;">yes</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">创建数据表</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">当完成时可以看到</span><span lang="EN-US"><span style="font-family:Calibri;"> ''Administrator account created:''<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">#</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">下载初始化脚本保存在</span><span lang="EN-US"><span style="font-family:Calibri;">/etc/init.d/gitlab<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">wget -O /etc/init.d/gitlab https://gitlab.com/gitlab-org/gitlab-recIPes/raw/master/init/sysvinit/centos/gitlab-unicorn<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">chmod +x /etc/init.d/gitlab<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">chkconfig --add gitlab<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">确保</span><span lang="EN-US"><span style="font-family:Calibri;"> Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">开机自动运行</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">chkconfig gitlab on<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">设置</span><span lang="EN-US"><span style="font-family:Calibri;">logrotate<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">cp lib/support/logrotate/gitlab /etc/logrotate.d/gitlab<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">检查</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">和它的环境是否配置正确</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H bundle exec rake gitlab:env:info RAILS_ENV=production<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">启动</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">service gitlab start<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">编译</span><span lang="EN-US"><span style="font-family:Calibri;">assets<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H bundle exec rake assets:precompile RAILS_ENV=production<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">11.<span style="font-size:18px;mso-tab-count:1;"> </span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">配置</span><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">nginx</span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">服务器</span><span lang="EN-US"><o:p></o:p></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># Nginx</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的配置文件可以从网上</span><span lang="EN-US"><span style="font-family:Calibri;">get</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">到</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">wget -O /usr/local/nginx/conf/gitlab-ssl https://gitlab.com/gitlab-org/gitlab-recipes/raw/master/web-server/nginx/gitlab-ssl<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">下载完成后需要修改里面的</span><span lang="EN-US"><span style="font-family:Calibri;">server_name</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">端口，根据实际情况修改。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">配置文件中开启</span><span lang="EN-US"><span style="font-family:Calibri;">SSL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">功能，需要配置证书，可以配置个免费的临时证书</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">cd /usr/local/nginx/conf<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">openssl genrsa -des3 -out server.key 1024<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">openssl req -new -key server.key -out server.csr<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">cp server.key server.key.org<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">openssl rsa -in server.key.org -out server.key<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">编辑</span><span lang="EN-US"><span style="font-family:Calibri;"> nginx.conf<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">server {<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"><span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp; </span>server_name YOUR_DOMAINNAME_HERE;<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"><span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp; </span>listen 443;<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"><span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp; </span>ssl on;<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"><span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp; </span>ssl_certificate /usr/local/nginx/conf/server.crt;<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;"><span style="mso-spacerun:yes;">&nbsp;&nbsp;&nbsp; </span>ssl_certificate_key /usr/local/nginx/conf/server.key;<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">}<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">在</span><span lang="EN-US"><span style="font-family:Calibri;">nginx.conf</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">中使用的用户为</span><span lang="EN-US"><span style="font-family:Calibri;">daemon</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，需要添加运行</span><span lang="EN-US"><span style="font-family:Calibri;">nginx</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的用户至</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">组</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">usermod -a -G git nginx<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">chmod g+rx /home/git/<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">最后重启</span><span lang="EN-US"><span style="font-family:Calibri;">nginx</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">完成配置</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span lang="EN-US"><span style="font-size:18px;font-family:Calibri;">12.<span style="font-size:18px;mso-tab-count:1;"> </span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">完成</span><span lang="EN-US"><o:p></o:p></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"># </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">最后可以通过测试下</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的工作状态</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">cd /home/git/gitlab<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">sudo -u git -H bundle exec rake gitlab:check RAILS_ENV=production<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">默认的登录账号和密码是：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">admin@local.host<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">5iveL!fe<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">错误解决</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">错误</span><span lang="EN-US"><span style="font-family:Calibri;">1</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">：</span><span lang="EN-US"><span style="font-family:Calibri;">fatal: protocol error: bad line length character: This<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">解决：添加</span><span lang="EN-US"><span style="font-family:Calibri;">git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的</span><span lang="EN-US"><span style="font-family:Calibri;">/bin/bash</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">权限，</span><span lang="EN-US"><span style="font-family:Calibri;">usermod -s /bin/bash git<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">错误</span><span lang="EN-US"><span style="font-family:Calibri;">2</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">：</span><span lang="EN-US"><span style="font-family:Calibri;">fatal: The remote end hung up unexpectedly<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">解决：在</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab-shell</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的</span><span lang="EN-US"><span style="font-family:Calibri;">config.yml</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">中将</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab_url</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">修改正确</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">错误</span><span lang="EN-US"><span style="font-family:Calibri;">3</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">：</span><span lang="EN-US"><span style="font-family:Calibri;">/net/http.rb:878:in `initialize</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">’</span><span lang="EN-US"><span style="font-family:Calibri;">: Network is unreachable - connect(2) (Errno::ENETUNREACH)<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">解决方案：</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">分析错误，有提到</span><span lang="EN-US"><span style="font-family:Calibri;">Network is unreachable </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">。那说明网络不通，</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab-Shell</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">通过</span><span lang="EN-US"><span style="font-family:Calibri;">http</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">调用</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的</span><span lang="EN-US"><span style="font-family:Calibri;">API</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，那可能是配置的</span><span lang="EN-US"><span style="font-family:Calibri;">API</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">接口不对（</span><span lang="EN-US"><span style="font-family:Calibri;">IP</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">，端口等）。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的配置依赖于三个文件</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">/home/git/gitlab/config/unicorn.rb</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">：配置</span><span lang="EN-US"><span style="font-family:Calibri;">ruby</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">提供的服务端口、</span><span lang="EN-US"><span style="font-family:Calibri;">IP<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">/home/git/gitlab/config/gitlab.yml</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">：配置</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">服务的端口、</span><span lang="EN-US"><span style="font-family:Calibri;">IP<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">/home/git/gitlab-shell/config.yml</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">：配置</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab-shell</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">要调用的</span><span lang="EN-US"><span style="font-family:Calibri;">API</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">接口</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">这三个文件的配置要保持一致，只需要更改</span><span lang="EN-US"><span style="font-family:Calibri;">IP</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">和端口就可以了，其他不用动，其中</span><span lang="EN-US"><span style="font-family:Calibri;">gitlab.yml</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的端口会显示在</span><span lang="EN-US"><span style="font-family:Calibri;">WEB</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">界面上，可以省略不写。</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><strong><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">参考</span><span lang="EN-US"><o:p></o:p></span></strong></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">官方安装文档</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">https://github.com/gitlabhq/gitlab-recipes/tree/master/install/centos#compile-assets<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">GitLab </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">官方安装文档中文翻译</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">http://zhigang.net/2012/11/gitlab.html<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">在</span><span lang="EN-US"><span style="font-family:Calibri;">CentOS</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">上部署</span><span lang="EN-US"><span style="font-family:Calibri;">GitLab (</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">自托管的</span><span lang="EN-US"><span style="font-family:Calibri;">Git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">项目仓库</span><span lang="EN-US"><span style="font-family:Calibri;">)<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">http://www.aikaiyuan.com/5349.html<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">一键安装包</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">https://bitnami.com/stack/gitlab<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">CentOS</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">上的一键部署</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">脚本</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">https://github.com/mattias-ohlsson/gitlab-installer/blob/master/gitlab-install-el6.sh<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">服务搬迁之后出现的客户端</span><span lang="EN-US"><span style="font-family:Calibri;">git clone</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">的报错问题</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">http://www.oschina.net/question/96940_128603<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">阿里云</span><span lang="EN-US"><span style="font-family:Calibri;">CentOS 6.4</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">搭建</span><span lang="EN-US"><span style="font-family:Calibri;">Gitlab 6.4</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">（源码安装）</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:small;">http://www.kankanews.com/ICkengine/archives/103197.shtml<o:p></o:p></span></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><o:p><span style="font-size:small;font-family:Calibri;">&nbsp;</span></o:p></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Nginx + https + </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">免费</span><span lang="EN-US"><span style="font-family:Calibri;">SSL</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">证书配置指南</span><span lang="EN-US"><o:p></o:p></span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span lang="EN-US"><span style="font-size:small;font-family:Calibri;">http://blog.csdn.net/ztclx2010/article/details/6896336</span><o:p></o:p></span></p>\r\n<p>&nbsp;</p>', '<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><strong><span lang="EN-US" style="mso-fareast-font-family:Calibri;mso-bidi-font-family:Calibri;"><span style="mso-list:Ignore;"><span style="font-size:small;font-family:Calibri;"><span style="font-size:18px;">1.</span></span><SPAN style="FONT-SIZE: 18px; FONT-VARIANT: normal; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: normal" Roman?;? New Times>&nbsp;&nbsp;&nbsp;</span></span></span><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;"><span style="font-size:18px;">Gitlab</span></span></span><span style="font-size:18px;font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">安装前</span><span lang="EN-US"><?xml:namespace prefix = "o" ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></span></span></strong></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span lang="EN-US"><span style="font-family:Calibri;">Gitlab</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">是一个利用</span><span lang="EN-US"><span style="font-family:Calibri;"> Ruby on Rails </span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">开发的开源应用程序，实现一个自托管的</span><span lang="EN-US"><span style="font-family:Calibri;">Git</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">项目仓库，可通过</span><span lang="EN-US"><span style="font-family:Calibri;">Web</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">界面进行访问公开的或者私人项目。</span></span></p>\r\n<p class="MsoNormal" style="margin:0cm 0cm 0pt;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">它拥有与</span><span lang="EN-US"><span style="font-family:Calibri;">Github</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序</span><span lang="EN-US"><span style="font-family:Calibri;">(Wall)</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。</span></span></p>', 2251, '["Gitlab","CentOS"]', 0, 0, 1, '2014-04-08 14:05:23', '2014-04-08 14:05:23', '2016-06-16 20:41:55');
INSERT INTO `post` (`id`, `user_id`, `category_id`, `title`, `content`, `excerpt`, `views`, `tags`, `comment_num`, `attachment_num`, `publish`, `edited_at`, `created_at`, `updated_at`) VALUES
(77, 1, 3, 'CentOS 7采用yum安装LNMP最新版本', '<p><span style="font-size:14px;">默认的Centos源安装软件版本比较老，下面的源可以安装比较新的软件版本，主要用于Centos采用YUM来安装LNMP架构。</span></p>\r\n<p><span style="font-size:14px;"><strong><span style="font-size:18px;">一、Mysql源</span></strong></span></p>\r\n<p><span style="font-size:14px;">介绍地址</span></p>\r\n<p><a href="http://dev.mysql.com/downloads/repo/yum/"><span style="font-size:14px;"><a href="http://dev.mysql.com/downloads/repo/yum/">http://dev.mysql.com/downloads/repo/yum/</span></a></a></p>\r\n<p><span style="font-size:14px;">1、&nbsp;在网站上找到下载地址后可以安装源<br />\r\n</span><span style="font-size:14px;">rpm -Uvh </span><span style="font-size:14px;">http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span></p>\r\n<p><span style="font-size:14px;">2、&nbsp;安装mysql</span></p>\r\n<p><span style="font-size:14px;">yum install mysql<br />\r\nyum install mysql-community-server</span></p>\r\n<p><span style="font-size:14px;">3、&nbsp;启动和停止mysql</span></p>\r\n<p><span style="font-size:14px;">service mysql start<br />\r\nservice mysql stop</p>\r\n<p style="white-space:normal;word-spacing:0px;text-transform:none;color:#000000;text-align:left;font:14px/21px 微软雅黑;margin:5px 0px;letter-spacing:normal;background-color:#ffffff;text-indent:0px;-webkit-text-stroke-width:0px;"><span style="font-size:14px;">4、配置mysql安装</span></p>\r\n<p style="white-space:normal;word-spacing:0px;text-transform:none;color:#000000;text-align:left;font:14px/21px 微软雅黑;margin:5px 0px;letter-spacing:normal;background-color:#ffffff;text-indent:0px;-webkit-text-stroke-width:0px;"><span style="font-size:14px;">mysql_secure_installation</span></p>\r\n</span> <p><span style="font-size:18px;"><strong>二、Nginx源</strong></span></p>\r\n<p><span style="font-size:14px;">介绍地址：</span></p>\r\n<p><a href="http://nginx.org/en/linux_packages.html#stable"><span style="font-size:14px;">http://nginx.org/en/linux_packages.html#stable</span></a></p>\r\n<p><span style="font-size:16px;"><strong>安装源方法一：</strong></span></p>\r\n<p><span style="font-size:14px;">1、&nbsp;创建/etc/yum.repos.d/nginx.repo，在文件中编辑内容</span><br />\r\n<span style="font-size:14px;">[nginx]</span><br />\r\n<span style="font-size:14px;">name=nginx repo</span><br />\r\n<span style="font-size:14px;">baseurl=http://nginx.org/packages/OS/OSRELEASE/$basearch/</span><br />\r\n<span style="font-size:14px;">gpgcheck=0</span><br />\r\n<span style="font-size:14px;">enabled=1</span></p>\r\n<p><span style="font-size:14px;">2、其中将baseurl中的OS替换成“rhel” 或 “centos”，将“OSRELEASE” 替换成系统版本“6”或 “7”。</span></p>\r\n<p><span style="font-size:14px;"><strong><span style="font-size:16px;">安装源方法二：</span></strong></span></p>\r\n<p><span style="font-size:14px;">根据当前系统版本的nginx源包，可以根据网址提供的版本下载</span><br />\r\n<span style="font-size:14px;">rpm&nbsp;-Uvh <span style="font-size:14px;">http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span></span></p>\r\n<p><span style="font-size:14px;">安装</span><br />\r\n<span style="font-size:14px;">yum install nginx</span></p>\r\n<p><span style="font-size:14px;">启动</span><br />\r\n<span style="font-size:14px;">systemctl start nginx</span></p>\r\n<p><span style="font-size:18px;"><strong>三、PHP源</strong></span></p>\r\n<p><span style="font-size:14px;">介绍地址：</span><br />\r\n<a href="http://webtatic.com/"><span style="font-size:14px;">http://webtatic.com/</span></a><span style="font-size:14px;"> </span></p>\r\n<p><span style="font-size:14px;">安装源命令：、</span><br />\r\n<span style="font-size:14px;">CentOS 6</span><br />\r\n<span style="font-size:14px;">rpm -Uvh </span><a href="http://mirror.webtatic.com/yum/el6/latest.rpm"><span style="font-size:14px;"><a href="http://mirror.webtatic.com/yum/el6/latest.rpm">http://mirror.webtatic.com/yum/el6/latest.rpm</span></a></a></p>\r\n<p><span style="font-size:14px;">CentOS 7</span><br />\r\n<span style="font-size:14px;">rpm -Uvh </span><a href="https://mirror.webtatic.com/yum/el7/epel-release.rpm"><span style="font-size:14px;">https://mirror.webtatic.com/yum/el7/epel-release.rpm</span></a><br />\r\n<span style="font-size:14px;">rpm -Uvh </span><a href="https://mirror.webtatic.com/yum/el7/webtatic-release.rpm"><span style="font-size:14px;">https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span></a></p>\r\n<p><span style="font-size:14px;">安装PHP命令：</span><br />\r\n<span style="font-size:14px;">PHP 5.5</span><br />\r\n<span style="font-size:14px;">yum install php55w php55w-opcache php55w-cli php55w-fpm php55w-gd php55w-mbstring php55w-mcrypt php55w-pdo php55w-pecl-memcache&nbsp; php55w-xml php55w-xmlrpc php55w-mysqlnd</span></p>\r\n<p><span style="font-size:14px;">PHP 5.6</span><br />\r\n<span style="font-size:14px;">yum install php56w php56w-opcache php56w-common php56w-cli php56w-fpm php56w-gd php56w-mbstring php56w-mcrypt php56w-pdo php56w-pecl-memcache&nbsp; php56w-xml php56w-xmlrpc php56w-mysqlnd</span><br />\r\n</p>', '<p class="MsoNormal" style="margin:0cm 0cm 0pt;text-indent:21pt;mso-char-indent-count:2.0;"><span style="font-size:small;"><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">默认的</span><span lang="EN-US"><span style="font-family:Calibri;">Centos</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">源安装软件版本比较老，下面的源可以安装比较新的软件版本，主要用于</span><span lang="EN-US"><span style="font-family:Calibri;">Centos</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">采用</span><span lang="EN-US"><span style="font-family:Calibri;">YUM</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">来安装</span><span lang="EN-US"><span style="font-family:Calibri;">LNMP</span></span><span style="font-family:宋体;mso-ascii-font-family:Calibri;mso-hansi-font-family:Calibri;">架构。</span><span lang="EN-US"><?xml:namespace prefix = "o" ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></span></span></p>', 1661, '["LNMP","CentOS"]', 0, 0, 1, '2015-05-24 10:51:06', '2015-05-24 10:51:06', '2016-06-16 16:01:01'),
(78, 1, 9, 'Shadowsocks科学上网', '<p><span style="font-size:14px;">前段时间一直采用SSH tunnel + Chrome插件SwitchyOmega来进行科学上网，这几天采用SSH tunnel上Google时，经常弹出“Google Sorry”的提示，于是乎就搭建了Shadowsocks的服务器来进行科学上网了，先复制一段介绍内容吧。</span></p>\r\n<p><span style="font-size:14px;"><strong><span style="font-size:24px;">什么是Shadowsocks</span></strong></span></p>\r\n<p><span style="font-size:14px;">Shadowsocks 是一个安全的socks5代理，用于保护网络流量，是一个开源项目。通过客户端以指定的密码、加密方式和端口连接服务器，成功连接到服务器后，客户端在用户的电脑上构建一个本地socks5代理。使用时将流量分到本地socks5代理，客户端将自动加密并转发流量到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。</span></p>\r\n<p><span style="font-size:24px;"><strong>Shadowsocks优势</strong></span></p>\r\n<p><span style="font-size:14px;">1、如前面所说，使用SSH来创建本地socks5代理的方法容易被发现，某些地区干脆进行了封锁，而Shadowsocks的代理方式更为隐蔽和安全。</span></p>\r\n<p><span style="font-size:14px;">2、无需保持实时连接，不用考虑断线问题。在使用SSH时，总会发生断开连接的情况，如网络不稳定、电脑休眠、切换wifi等，此时SSH连接将断开，浏览网页什么的会提示无法连接到代理服务器。虽然客户端大都支持断线重连，但是反应经常不太灵敏，平均需要30秒左右的时间（而且这个时间是从你点开网页开始算的）。如果你用的是手机的话，鉴于手机网络的多变性，人一旦动起来就几乎不可用了。</span></p>\r\n<p><span style="font-size:14px;">3、更丰富的客户端支持。目前Shadowsocks官网（是shadowsocks.org，不是.com那个，.com那个是售卖账号的，并非官网，客户端下载可以去.com那个下载）提供几乎全平台支持，包括linux和非越狱iPhone在内。尤其是OS X版的自动代理模式（PAC）非常稳定，胜过GoAgentX，完美支持safari。同时，各个平台上的客户端使用都十分简单，基本上就是填写一下地址端口密码什么的，就能开始使用了，连点击连接都不用（原因见2点）。另外，大部分客户端支持扫描屏幕二维码完成配置，这个指导新手不要太爽。</span></p>\r\n<p><span style="font-size:14px;"><strong><span style="font-size:24px;">CentOS上安装Shadowsocks</span></strong></span></p>\r\n<p><span style="font-size:14px;">Shadowsocks服务器端版本有以下几种</span><br />\r\n<span style="font-size:14px;">shadowsocks-libev</span><br />\r\n<span style="font-size:14px;">shadowsocks-nodejs</span><br />\r\n<span style="font-size:14px;">shadowsocks-Python</span><br />\r\n<span style="font-size:14px;">shadowsocks-go</span><br />\r\n<span style="font-size:14px;">Shadowsocks-qt</span></p>\r\n<p><span style="font-size:14px;">大家可以根据自己的情况选择安装，其中的 shadowsocks-libev采用C语言开发，内存占用小，功能齐全，更新快十分推荐使用。官方安装方法可以参考</span><a href="http://shadowsocks.org/en/download/servers.html"><span style="font-size:14px;">http://shadowsocks.org/en/download/servers.html</span></a><span style="font-size:14px;">的介绍。</span><br />\r\n<span style="font-size:14px;">因为主机采用的是CentOS6，官网没有介绍yum安装的方法，可以通过 </span><a href="https://copr.fedoraproject.org/coprs/librehat/shadowsocks/"><span style="font-size:14px;">https://copr.fedoraproject.org/coprs/librehat/shadowsocks/</span></a><span style="font-size:14px;">来根据自己的系统版本更新主机的源来使用yum命令安装。</span></p>\r\n<p><span style="font-size:14px;">cd /etc/yum.repos.d/</span><br />\r\n<span style="font-size:14px;">wget </span><span style="font-size:14px;">https://copr.fedoraproject.org/coprs/librehat/shadowsocks/repo/epel-6/librehat-shadowsocks-epel-6.repo</span><br />\r\n<span style="font-size:14px;">yum install shadowsocks-libev</span><br />\r\n<span style="font-size:14px;">&nbsp;</span><br />\r\n<span style="font-size:14px;">用yum命令安装好后，可以对shadowsocks-libev进行配置，shadowsocks-libev的配置文件路径/etc/shadowsocks-libev/config.json，其内容如下：</span><br />\r\n<span style="font-size:14px;">{</span><br />\r\n<span style="font-size:14px;">&nbsp;&nbsp;&nbsp; "server":"127.0.0.1",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 服务器的IP地址</span><br />\r\n<span style="font-size:14px;">&nbsp;&nbsp;&nbsp; "server_port":8388,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 服务器端口，客户端需要连接用的</span><br />\r\n<span style="font-size:14px;">&nbsp;&nbsp;&nbsp; "local_port":1080,</span><br />\r\n<span style="font-size:14px;">&nbsp;&nbsp;&nbsp; "password":"barfoo!",&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # 认证密码</span><br />\r\n<span style="font-size:14px;">&nbsp;&nbsp;&nbsp; "timeout":60,</span><br />\r\n<span style="font-size:14px;">&nbsp;&nbsp;&nbsp; "method":"aes-256-cfb"&nbsp; # 加密方式，推荐使用aes-256-cfb</span><br />\r\n<span style="font-size:14px;">}</span></p>\r\n<p><span style="font-size:14px;">根据服务器的内容配置好后就可以启动shadowsocks的服务了，启动和停止命令如下：</span><br />\r\n<span style="font-size:14px;">/etc/init.d/shadowsocks-libev start</span><br />\r\n<span style="font-size:14px;">/etc/init.d/shadowsocks-libev stop</span><br />\r\n<span style="font-size:14px;">/etc/init.d/shadowsocks-libev restart</span></p>\r\n<p><span style="font-size:14px;"><strong><span style="font-size:24px;">Shadowsocks客户端设置</span></strong></span></p>\r\n<p><span style="font-size:14px;">Shadowsocks客户端可以从</span><a href="https://shadowsocks.com/client.html"><span style="font-size:14px;">https://shadowsocks.com/client.html</span></a><span style="font-size:14px;">下载，下载后，配置如下图：</span></p>\r\n<p><a id="ematt:35" href="/upload/old/201509/8f38e23c1214d1d3bbdea23c05d21ece20150906085216.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201509/thum-8f38e23c1214d1d3bbdea23c05d21ece20150906085216.png" /></a></p>\r\n<p><span style="font-size:14px;">点击确认后即可以启动sock5代理了，因为ie和chrome（chrome可以通过插件SwitchyOmega）没法直接使用sock5代理，右键Shadowsocks通知栏图标，点击“启用系统代理”，即可以开启IE的科学上网功能，“启用系统代理”即是开启了HTTP代理功能。</span></p>\r\n<p><a id="ematt:36" href="/upload/old/201509/f59b9c4c40440d706c0b512854ddd5ab20150906085217.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201509/f59b9c4c40440d706c0b512854ddd5ab20150906085217.png" /></a></p>\r\n<p><span style="font-size:14px;">此时我们可以看一下IE的“Internet 选项”-》“连接”-》“局域网设置”里面看到如下设置</span></p>\r\n<p><a id="ematt:37" href="/upload/old/201509/d872f22f60909e10f9250618c90af53320150906085217.png" target="_blank"><img border="0" alt="点击查看原图" src="/upload/old/201509/d872f22f60909e10f9250618c90af53320150906085217.png" /></a></p>\r\n<p><span style="font-size:14px;">说明点击“启用系统代理”时，Shadowsocks会自动配置IE的代理，Shadowsocks客户端如此人性化的设置着实是太方便了，不得不点个赞了！！</span></p>\r\n<p><span style="font-size:14px;">因为主机在国外，如果所有访问流量都通过Shadowsocks代理走，访问国内网速会下降，Shadowsocks客户端自带PAC规则，可以根据访问的地址来判断是否是被墙的地址，如果在被墙地址规则里面会采用Shadowsocks代理，如果没有在被墙的规则里面则直接连接访问。PAC可以根据需要自己设定，可以采用客户端本地PAC，或者从GFWList更新本地PAC。</span></p>\r\n<p><span style="font-size:14px;"><strong><span style="font-size:24px;">总结</span></strong></span></p>\r\n<p><span style="font-size:14px;">至此，Shadowsocks服务器和客户端安装使用方法就介绍完了，以前采用的MyEnTunnel+Chrome+SwitchOmega+gfwlist的方法优点就是服务器不需要配置，只要增加个低权限的SSH账号即可，但是使用起来MyEnTunnel经常掉线，稳定性不如Shadowsocks，而且客户端配置起来麻烦。Shadowsocks客户端使用起来非常便捷，带了PAC功能，服务器配置也简单，强烈推荐使用。</span></p>\r\n<p><br />\r\n<strong><span style="font-size:14px;"><span style="font-size:24px;">参考：</span></span><br />\r\n</strong><span style="font-size:14px;">1、</span><a href="http://ilovetile.com/3423"><span style="font-size:14px;">http://ilovetile.com/3423</span></a><br />\r\n<span style="font-size:14px;">2、</span><a href="http://felixqu.com/2015/06/19/centos-shadowsock-libev-pptp/"><span style="font-size:14px;">http://felixqu.com/2015/06/19/centos-shadowsock-libev-pptp/</span></a><br />\r\n<span style="font-size:14px;">&nbsp;</span><br />\r\n<span style="font-size:14px;">&nbsp;</span></p>', '<p><span style="font-size:14px;">前段时间一直采用SSH tunnel + Chrome插件SwitchyOmega来进行科学上网，这几天采用SSH tunnel上Google时，经常弹出“Google Sorry”的提示，于是乎就搭建了Shadowsocks的服务器来进行科学上网了，先复制一段介绍内容吧。</span></p>\r\n<br />', 2875, '["Shadowsocks"]', 0, 3, 1, '2015-09-06 08:49:18', '2015-09-06 08:49:18', '2016-06-16 20:55:42');

-- --------------------------------------------------------

--
-- 表的结构 `role`
--

CREATE TABLE `role` (
  `id` int(10) UNSIGNED NOT NULL,
  `char` varchar(45) NOT NULL COMMENT '角色字符串',
  `name` varchar(45) NOT NULL COMMENT '角色名称'
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `role`
--

INSERT INTO `role` (`id`, `char`, `name`) VALUES
(1, 'admin', '管理员'),
(2, 'user', '普通用户');

-- --------------------------------------------------------

--
-- 表的结构 `tag`
--

CREATE TABLE `tag` (
  `id` int(10) UNSIGNED NOT NULL,
  `name` varchar(45) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `tag`
--

INSERT INTO `tag` (`id`, `name`) VALUES
(1, 'PHP'),
(2, 'Linux'),
(3, 'Laravel'),
(4, '生活'),
(5, 'Netpioneer'),
(6, '嵌入式'),
(7, 'BIT'),
(8, 'Gitlab'),
(9, 'CentOS'),
(10, 'Shadowsocks'),
(11, 'MySQL'),
(12, 'Apache'),
(13, 'LNMP'),
(14, '年终');

-- --------------------------------------------------------

--
-- 表的结构 `user`
--

CREATE TABLE `user` (
  `id` int(10) UNSIGNED NOT NULL,
  `username` varchar(45) NOT NULL COMMENT '用户名',
  `password` varchar(120) NOT NULL COMMENT '密码',
  `nickname` varchar(45) NOT NULL COMMENT '昵称',
  `email` varchar(45) NOT NULL COMMENT '邮箱',
  `avatar` varchar(255) NOT NULL COMMENT '头像',
  `desc` varchar(45) NOT NULL COMMENT '描述',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- 转存表中的数据 `user`
--

INSERT INTO `user` (`id`, `username`, `password`, `nickname`, `email`, `avatar`, `desc`, `created_at`, `updated_at`) VALUES
(1, 'wangte', '', '风格独特', 'wangte168@sina.com', '', '', '2016-06-11 12:27:07', '2016-06-11 12:27:07');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `attachment`
--
ALTER TABLE `attachment`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `category`
--
ALTER TABLE `category`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `comment`
--
ALTER TABLE `comment`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `config`
--
ALTER TABLE `config`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `post`
--
ALTER TABLE `post`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_post_user_idx` (`user_id`),
  ADD KEY `fk_post_category1_idx` (`category_id`);

--
-- Indexes for table `role`
--
ALTER TABLE `role`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `tag`
--
ALTER TABLE `tag`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `attachment`
--
ALTER TABLE `attachment`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `category`
--
ALTER TABLE `category`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;
--
-- AUTO_INCREMENT for table `comment`
--
ALTER TABLE `comment`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `config`
--
ALTER TABLE `config`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `post`
--
ALTER TABLE `post`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=79;
--
-- AUTO_INCREMENT for table `role`
--
ALTER TABLE `role`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;
--
-- AUTO_INCREMENT for table `tag`
--
ALTER TABLE `tag`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=15;
--
-- AUTO_INCREMENT for table `user`
--
ALTER TABLE `user`
  MODIFY `id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;
--
-- 限制导出的表
--

--
-- 限制表 `post`
--
ALTER TABLE `post`
  ADD CONSTRAINT `fk_post_category1` FOREIGN KEY (`category_id`) REFERENCES `category` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION,
  ADD CONSTRAINT `fk_post_user` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
